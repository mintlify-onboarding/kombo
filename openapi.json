{
  "openapi": "3.0.0",
  "info": { "title": "Kombo API", "version": "1.0.0" },
  "paths": {
    "/check-api-key": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /check-api-key Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": { "customer_id": { "type": "string" } },
                      "required": ["customer_id"],
                      "example": { "customer_id": "2Uev1YUTqLFdvMPD3Jtrg2FX" }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": { "customer_id": "2Uev1YUTqLFdvMPD3Jtrg2FX" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /check-api-key Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Check whether your API key is working properly.\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"customer_id\": \"2Uev1YUTqLFdvMPD3Jtrg2FX\"\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.",
        "summary": "Check API key",
        "tags": ["General"]
      }
    },
    "/force-sync": {
      "post": {
        "responses": {
          "200": {
            "description": "POST /force-sync Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": { "already_queued": { "type": "boolean" } },
                      "required": ["already_queued"]
                    }
                  },
                  "required": ["status", "data"]
                }
              }
            }
          },
          "400": {
            "description": "POST /force-sync Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Trigger a sync for a specific integration.\n\n> Please note that it is **not** necessary nor recommended to call this endpoint periodically on your side. Kombo already performs period syncs for you and you should only trigger syncs yourself in special cases (like when a user clicks on a \"Sync\" button in your app).",
        "summary": "Trigger sync",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "POST /force-sync request body",
                "allOf": []
              }
            }
          }
        },
        "tags": ["General"],
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "workday:HWUTwvyx2wLoSUHphiWVrp28"
          }
        ]
      }
    },
    "/passthrough/{tool}/{api}": {
      "post": {
        "responses": {
          "200": {
            "description": "POST /passthrough/:tool/:api Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "description": "Full URL of the request that we automatically assemble for you based on the specified `api`, the specified `path`, and the integration's auth credentials. You can use this to debug path-related issues (e.g., the API returning 404 errors)."
                        },
                        "status": {
                          "type": "integer",
                          "format": "int64",
                          "minimum": -9007199254740991,
                          "exclusiveMinimum": false,
                          "maximum": 9007199254740991,
                          "exclusiveMaximum": false,
                          "description": "Status code returned from the remote system."
                        },
                        "headers": {
                          "type": "object",
                          "additionalProperties": {
                            "oneOf": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          }
                        },
                        "data": { "format": "any", "nullable": true }
                      },
                      "required": ["url", "status"]
                    }
                  },
                  "required": ["status", "data"]
                }
              }
            }
          },
          "400": {
            "description": "POST /passthrough/:tool/:api Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "At Kombo we put a lot of work into making sure that our unified API covers all our customers' use cases and that they never have to think about integration-specific logic again. There are cases, however, where our customers want to build features that are very integration-specfic. That's where this endpoint comes in.\n\nPass in details about the request you want to make to the integration's API and we'll forward it for you. We'll also take care of setting the right base URL and authenticating your requests.\n\nTo get started, please pick the relevant API (some tools provide multiple to due different base URLs or authentication schemes) from the table below and pass in the `{tool}/{api}` identifier as part of the path.\n\n|Integration|`{tool}/{api}`|Description|\n|---|---|---|\n|Personio|`personio/personnel`|Personio's [Personnel Data API](https://developer.personio.de/reference/get_company-employees). We automatically authenticate all requests using the client ID and secret and use `https://api.personio.de/v1` as the base URL.|\n|Personio|`personio/recruiting`|Personio's [Recruiting API](https://developer.personio.de/reference/get_company-employees). We automatically authenticate all requests using the Recruiting access token and use `https://api.personio.de/v1/recruiting` as the base URL.|\n|Personio|`personio/jobboard`|API endpoints exposed on Personio's public job board pages ([currently just the XML feed](https://developer.personio.de/reference/get_xml)). We automatically use the right `https://{company}.jobs.personio.de` base URL.|\n|Recruitee|`recruitee/default`|The [Recruitee API](https://api.recruitee.com/docs/index.html). We automatically authenticate all requests and use `https://api.recruitee.com` as the base URL.|\n\n> Please note that the pass-through API endpoints are only meant for edge cases. That's why we only expose them for new integrations after understanding a concrete customer use case. If you have such a use case in mind, please reach out to Kombo.",
        "summary": "Send pass-through request",
        "parameters": [
          {
            "name": "tool",
            "in": "path",
            "required": true,
            "schema": {
              "description": "POST /passthrough/:tool/:api parameter",
              "type": "string"
            },
            "examples": { "example1": { "value": "personio" } }
          },
          {
            "name": "api",
            "in": "path",
            "required": true,
            "schema": {
              "description": "POST /passthrough/:tool/:api parameter",
              "type": "string"
            },
            "examples": { "example1": { "value": "personnel" } }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "POST /passthrough/:tool/:api request body",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": ["GET", "POST", "DELETE", "PUT", "PATCH"]
                      },
                      "path": { "type": "string", "pattern": "/^\\//" },
                      "headers": {
                        "type": "object",
                        "additionalProperties": { "type": "string" }
                      },
                      "data": { "format": "any", "nullable": true }
                    },
                    "required": ["method", "path"],
                    "example": { "method": "GET", "path": "/company/employees" }
                  }
                ]
              },
              "examples": {
                "example1": {
                  "value": { "method": "GET", "path": "/company/employees" }
                }
              }
            }
          }
        },
        "tags": ["General"]
      }
    },
    "/integrations/{integration_id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "DELETE /integrations/:integration_id Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": ["status", "data"]
                }
              }
            }
          },
          "400": {
            "description": "DELETE /integrations/:integration_id Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Delete the specified integration. **⚠️ This can not be undone!** ",
        "summary": "Delete integration",
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "DELETE /integrations/:integration_id parameter",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "DELETE /integrations/:integration_id request body",
                "allOf": []
              }
            }
          }
        },
        "tags": ["General"]
      },
      "get": {
        "responses": {
          "200": {
            "description": "GET /integrations/:integration_id Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "tool": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The ID of the connected tool in Kombo (e.g. `factorial`)."
                            },
                            "label": { "type": "string" },
                            "logo_url": {
                              "type": "string",
                              "format": "url",
                              "description": "URL to an SVG logo of the connected tool. The logo usually contains the tool name."
                            },
                            "icon_url": {
                              "type": "string",
                              "format": "url",
                              "description": "URL to a square SVG icon of the connected tool."
                            }
                          },
                          "required": ["id", "label", "logo_url", "icon_url"]
                        },
                        "category": {
                          "type": "string",
                          "enum": ["HRIS", "ATS"]
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "ACTIVE",
                            "INVALID",
                            "INACTIVE",
                            "QUALITY_ASSURANCE"
                          ]
                        },
                        "end_user": {
                          "type": "object",
                          "properties": {
                            "organization_name": { "type": "string" },
                            "creator_email": {
                              "nullable": true,
                              "type": "string",
                              "format": "email"
                            },
                            "origin_id": {
                              "nullable": true,
                              "type": "string",
                              "description": "The ID you have passed initially to the connection flow to create this integration."
                            }
                          },
                          "required": [
                            "organization_name",
                            "creator_email",
                            "origin_id"
                          ]
                        },
                        "created_at": {
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        }
                      },
                      "required": [
                        "id",
                        "tool",
                        "category",
                        "status",
                        "end_user",
                        "created_at"
                      ],
                      "example": {
                        "id": "factorial:8d1hpPsbjxUkoCoa1veLZGe5",
                        "tool": {
                          "id": "factorial",
                          "label": "Factorial",
                          "logo_url": "https://storage.googleapis.com/kombo-assets/integrations/factorial/logo.svg",
                          "icon_url": "https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg"
                        },
                        "category": "HRIS",
                        "status": "ACTIVE",
                        "end_user": {
                          "organization_name": "Acme",
                          "creator_email": "example-integration-creator@acme.com",
                          "origin_id": "2DQJAUtSzzzKP9buDTvUvPk3"
                        },
                        "created_at": "2022-08-07T14:01:29.196Z"
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "id": "factorial:8d1hpPsbjxUkoCoa1veLZGe5",
                        "tool": {
                          "id": "factorial",
                          "label": "Factorial",
                          "logo_url": "https://storage.googleapis.com/kombo-assets/integrations/factorial/logo.svg",
                          "icon_url": "https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg"
                        },
                        "category": "HRIS",
                        "status": "ACTIVE",
                        "end_user": {
                          "organization_name": "Acme",
                          "creator_email": "example-integration-creator@acme.com",
                          "origin_id": "2DQJAUtSzzzKP9buDTvUvPk3"
                        },
                        "created_at": "2022-08-07T14:01:29.196Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /integrations/:integration_id Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get the specified integration with everything you need to display it to your customer.\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"id\": \"factorial:8d1hpPsbjxUkoCoa1veLZGe5\",\n    \"tool\": {\n      \"id\": \"factorial\",\n      \"label\": \"Factorial\",\n      \"logo_url\": \"https://storage.googleapis.com/kombo-assets/integrations/factorial/logo.svg\",\n      \"icon_url\": \"https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg\"\n    },\n    \"category\": \"HRIS\",\n    \"status\": \"ACTIVE\",\n    \"end_user\": {\n      \"organization_name\": \"Acme\",\n      \"creator_email\": \"example-integration-creator@acme.com\",\n      \"origin_id\": \"2DQJAUtSzzzKP9buDTvUvPk3\"\n    },\n    \"created_at\": \"2022-08-07T14:01:29.196Z\"\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.",
        "summary": "Get integration",
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "GET /integrations/:integration_id parameter",
              "type": "string"
            }
          }
        ],
        "tags": ["General"]
      }
    },
    "/hris/employees": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /hris/employees Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "next": { "nullable": true, "type": "string" },
                        "results": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": { "type": "string" },
                                  "remote_id": { "type": "string" },
                                  "employee_number": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "first_name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "last_name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "display_full_name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "job_title": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "work_email": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "email"
                                  },
                                  "personal_email": {
                                    "nullable": true,
                                    "type": "string",
                                    "format": "email"
                                  },
                                  "mobile_phone_number": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "ssn": { "nullable": true, "type": "string" },
                                  "tax_id": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "gender": {
                                    "nullable": true,
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "MALE",
                                          "FEMALE",
                                          "NON_BINARY",
                                          "NOT_SPECIFIED"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "description": "If we can't find a clear mapping: The original string passed through."
                                      }
                                    ],
                                    "description": "One of 4 standardized values (`MALE`, `FEMALE`, `NON_BINARY`, or `NOT_SPECIFIED`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                                  },
                                  "ethnicity": {
                                    "nullable": true,
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "WHITE",
                                          "ASIAN",
                                          "HISPANIC_LATINO",
                                          "HAWAIIAN",
                                          "NATIVE_AMERICAN",
                                          "BLACK_AFRICAN_AMERICAN",
                                          "MULTIPLE_ETHNICITIES",
                                          "DECLINE_TO_SPECIFY"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "description": "If we can't find a clear mapping: The original string passed through."
                                      }
                                    ],
                                    "description": "One of 8 standardized values (`WHITE`, `ASIAN`, `HISPANIC_LATINO`, `HAWAIIAN`, `NATIVE_AMERICAN`, `BLACK_AFRICAN_AMERICAN`, `MULTIPLE_ETHNICITIES`, or `DECLINE_TO_SPECIFY`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                                  },
                                  "marital_status": {
                                    "nullable": true,
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "SINGLE",
                                          "MARRIED",
                                          "DOMESTIC_PARTNERSHIP",
                                          "WIDOWED",
                                          "DIVORCED",
                                          "SEPARATED",
                                          "NOT_MARRIED"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "description": "If we can't find a clear mapping: The original string passed through."
                                      }
                                    ],
                                    "description": "One of 7 standardized values (`SINGLE`, `MARRIED`, `DOMESTIC_PARTNERSHIP`, `WIDOWED`, `DIVORCED`, `SEPARATED`, or `NOT_MARRIED`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                                  },
                                  "employment_status": {
                                    "nullable": true,
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "ACTIVE",
                                          "PENDING",
                                          "INACTIVE",
                                          "LEAVE"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "description": "If we can't find a clear mapping: The original string passed through."
                                      }
                                    ],
                                    "description": "One of 4 standardized values (`ACTIVE`, `PENDING`, `INACTIVE`, or `LEAVE`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                                  },
                                  "employment_type": {
                                    "nullable": true,
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "FULL_TIME",
                                          "PART_TIME",
                                          "CONTRACT",
                                          "INTERNSHIP",
                                          "FREELANCE",
                                          "WORKING_STUDENT"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "description": "If we can't find a clear mapping: The original string passed through."
                                      }
                                    ],
                                    "description": "One of 6 standardized values (`FULL_TIME`, `PART_TIME`, `CONTRACT`, `INTERNSHIP`, `FREELANCE`, or `WORKING_STUDENT`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                                  },
                                  "avatar": {
                                    "nullable": true,
                                    "type": "string",
                                    "description": "URL to the employee's avatar. This is either the raw URL from the HR system (in cases where it can be requested without short-lived authentication) _or_ a URL to a temporarily cached version of the file hosted by Kombo. Kombo will delete the cached file after its deletion in the source system."
                                  },
                                  "work_location_id": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "manager_id": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "home_address": {
                                    "nullable": true,
                                    "type": "object",
                                    "properties": {
                                      "street_1": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "street_2": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "city": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "state": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "zip_code": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "country": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "raw": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      }
                                    },
                                    "required": []
                                  },
                                  "date_of_birth": {
                                    "nullable": true,
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "start_date": {
                                    "nullable": true,
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "termination_date": {
                                    "nullable": true,
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "remote_created_at": {
                                    "nullable": true,
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "changed_at": {
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "remote_deleted_at": {
                                    "nullable": true,
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "custom_fields": {
                                    "nullable": true,
                                    "type": "object",
                                    "additionalProperties": {
                                      "format": "any",
                                      "nullable": true
                                    }
                                  },
                                  "remote_data": {
                                    "nullable": true,
                                    "type": "object",
                                    "additionalProperties": {
                                      "format": "any",
                                      "nullable": true
                                    }
                                  }
                                },
                                "required": [
                                  "id",
                                  "remote_id",
                                  "employee_number",
                                  "first_name",
                                  "last_name",
                                  "display_full_name",
                                  "job_title",
                                  "work_email",
                                  "personal_email",
                                  "mobile_phone_number",
                                  "ssn",
                                  "tax_id",
                                  "gender",
                                  "ethnicity",
                                  "marital_status",
                                  "employment_status",
                                  "employment_type",
                                  "avatar",
                                  "work_location_id",
                                  "manager_id",
                                  "home_address",
                                  "date_of_birth",
                                  "start_date",
                                  "termination_date",
                                  "remote_created_at",
                                  "changed_at",
                                  "remote_deleted_at",
                                  "custom_fields",
                                  "remote_data"
                                ],
                                "example": {
                                  "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                  "remote_id": "32",
                                  "employee_number": "3243422",
                                  "first_name": "John",
                                  "last_name": "Doe",
                                  "display_full_name": "John Doe",
                                  "job_title": "Integrations Team Lead",
                                  "work_email": "john.doe@acme.com",
                                  "personal_email": "john@doe.me",
                                  "mobile_phone_number": "801-555-4687",
                                  "ssn": "555-32-6395",
                                  "tax_id": "12 345 678 901",
                                  "gender": "MALE",
                                  "ethnicity": "BLACK_AFRICAN_AMERICAN",
                                  "marital_status": "MARRIED",
                                  "employment_status": "INACTIVE",
                                  "employment_type": "FULL_TIME",
                                  "avatar": "https://resources.bamboohr.com/images/photo_person_150x150.png",
                                  "work_location_id": "7E2gyuv6TmvtByzBxW9Sxt53",
                                  "manager_id": "9pf2pxBB8VX8EQMC9aipW2Bo",
                                  "home_address": {
                                    "city": "Berlin",
                                    "country": "Germany",
                                    "raw": "Sonnenallee 63\n12045 Berlin\nGermany",
                                    "state": "Berlin",
                                    "street_1": "Sonnenallee 63",
                                    "street_2": null,
                                    "zip_code": "12045"
                                  },
                                  "date_of_birth": "1986-01-01T00:00:00.000Z",
                                  "start_date": "2020-04-07T00:00:00.000Z",
                                  "termination_date": "2022-05-20T00:00:00.000Z",
                                  "remote_created_at": "2020-04-07T12:32:01.000Z",
                                  "changed_at": "2022-08-07T14:01:29.196Z",
                                  "remote_deleted_at": null,
                                  "custom_fields": {},
                                  "remote_data": null
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "employments": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": { "type": "string" },
                                        "remote_id": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "employee_id": { "type": "string" },
                                        "job_title": {
                                          "nullable": true,
                                          "type": "string",
                                          "description": "**(⚠️ Deprecated)** We now provide the `job_title` directly on the employee model."
                                        },
                                        "pay_rate": {
                                          "nullable": true,
                                          "type": "number",
                                          "format": "double",
                                          "minimum": 5e-324,
                                          "exclusiveMinimum": false,
                                          "maximum": 1.7976931348623157e308,
                                          "exclusiveMaximum": false
                                        },
                                        "pay_period": {
                                          "nullable": true,
                                          "oneOf": [
                                            {
                                              "type": "string",
                                              "enum": [
                                                "HOUR",
                                                "DAY",
                                                "WEEK",
                                                "TWO_WEEKS",
                                                "HALF_MONTH",
                                                "MONTH",
                                                "TWO_MONTHS",
                                                "QUARTER",
                                                "HALF_YEAR",
                                                "YEAR"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "description": "If we can't find a clear mapping: The original string passed through."
                                            }
                                          ],
                                          "description": "One of 10 standardized values (`HOUR`, `DAY`, `WEEK`, `TWO_WEEKS`, `HALF_MONTH`, `MONTH`, `TWO_MONTHS`, `QUARTER`, `HALF_YEAR`, or `YEAR`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                                        },
                                        "pay_frequency": {
                                          "nullable": true,
                                          "oneOf": [
                                            {
                                              "type": "string",
                                              "enum": [
                                                "WEEKLY",
                                                "BIWEEKLY",
                                                "MONTHLY",
                                                "SEMIMONTHLY",
                                                "QUARTERLY",
                                                "SEMIANNUALLY",
                                                "ANNUALLY",
                                                "PRO_RATA"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "description": "If we can't find a clear mapping: The original string passed through."
                                            }
                                          ],
                                          "description": "One of 8 standardized values (`WEEKLY`, `BIWEEKLY`, `MONTHLY`, `SEMIMONTHLY`, `QUARTERLY`, `SEMIANNUALLY`, `ANNUALLY`, or `PRO_RATA`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                                        },
                                        "pay_currency": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "effective_date": {
                                          "nullable": true,
                                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                          "type": "string",
                                          "format": "date-time",
                                          "externalDocs": {
                                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                          }
                                        },
                                        "changed_at": {
                                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                          "type": "string",
                                          "format": "date-time",
                                          "externalDocs": {
                                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                          }
                                        },
                                        "remote_deleted_at": {
                                          "nullable": true,
                                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                          "type": "string",
                                          "format": "date-time",
                                          "externalDocs": {
                                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                          }
                                        },
                                        "remote_data": {
                                          "nullable": true,
                                          "type": "object",
                                          "additionalProperties": {
                                            "format": "any",
                                            "nullable": true
                                          }
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "remote_id",
                                        "employee_id",
                                        "job_title",
                                        "pay_rate",
                                        "pay_period",
                                        "pay_frequency",
                                        "pay_currency",
                                        "effective_date",
                                        "changed_at",
                                        "remote_deleted_at",
                                        "remote_data"
                                      ],
                                      "example": {
                                        "id": "12vpXR7BeqYNWDShXRgsonnm",
                                        "remote_id": "859",
                                        "employee_id": "8Xk99QfVKYA6vfEafEUBdEPJ",
                                        "job_title": "Social Media Marketer",
                                        "pay_rate": 85000,
                                        "pay_period": "YEAR",
                                        "pay_frequency": "SEMIMONTHLY",
                                        "pay_currency": "EUR",
                                        "effective_date": "2021-01-30T00:00:00.000Z",
                                        "changed_at": "2022-08-07T14:01:29.196Z",
                                        "remote_deleted_at": null,
                                        "remote_data": null
                                      }
                                    }
                                  },
                                  "time_off_balances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": { "type": "string" },
                                        "remote_id": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "employee_id": { "type": "string" },
                                        "type_id": { "type": "string" },
                                        "balance": {
                                          "nullable": true,
                                          "type": "number",
                                          "format": "double",
                                          "minimum": 5e-324,
                                          "exclusiveMinimum": false,
                                          "maximum": 1.7976931348623157e308,
                                          "exclusiveMaximum": false
                                        },
                                        "balance_unit": {
                                          "nullable": true,
                                          "type": "string",
                                          "enum": ["HOURS", "DAYS"]
                                        },
                                        "changed_at": {
                                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                          "type": "string",
                                          "format": "date-time",
                                          "externalDocs": {
                                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                          }
                                        },
                                        "remote_deleted_at": {
                                          "nullable": true,
                                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                          "type": "string",
                                          "format": "date-time",
                                          "externalDocs": {
                                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                          }
                                        },
                                        "used": {
                                          "nullable": true,
                                          "type": "number",
                                          "format": "double",
                                          "minimum": 5e-324,
                                          "exclusiveMinimum": false,
                                          "maximum": 1.7976931348623157e308,
                                          "exclusiveMaximum": false
                                        },
                                        "used_unit": {
                                          "nullable": true,
                                          "type": "string",
                                          "enum": ["HOURS", "DAYS"]
                                        },
                                        "remote_data": {
                                          "nullable": true,
                                          "type": "object",
                                          "additionalProperties": {
                                            "format": "any",
                                            "nullable": true
                                          }
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "remote_id",
                                        "employee_id",
                                        "type_id",
                                        "balance",
                                        "balance_unit",
                                        "changed_at",
                                        "remote_deleted_at",
                                        "used",
                                        "used_unit",
                                        "remote_data"
                                      ],
                                      "example": {
                                        "id": "FuyRuk5NqP3qTcThED3ymTuE",
                                        "remote_id": "124123",
                                        "employee_id": "2Up4ZCvq1bFVzmzXG6EWzV3j",
                                        "type_id": "BQJaBxRCiqN46G27VTegvkEr",
                                        "balance": 14,
                                        "balance_unit": "DAYS",
                                        "changed_at": "2022-08-07T14:01:29.196Z",
                                        "remote_deleted_at": null,
                                        "used": 3,
                                        "used_unit": "DAYS",
                                        "remote_data": null
                                      }
                                    }
                                  },
                                  "manager": {
                                    "nullable": true,
                                    "type": "object",
                                    "properties": {
                                      "first_name": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "last_name": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "id": { "type": "string" },
                                      "work_email": {
                                        "nullable": true,
                                        "type": "string",
                                        "format": "email"
                                      },
                                      "remote_id": { "type": "string" }
                                    },
                                    "required": [
                                      "first_name",
                                      "last_name",
                                      "id",
                                      "work_email",
                                      "remote_id"
                                    ],
                                    "example": {
                                      "first_name": "John",
                                      "last_name": "Doe",
                                      "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                      "work_email": "john.doe@acme.com",
                                      "remote_id": "32"
                                    }
                                  },
                                  "groups": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": { "type": "string" },
                                        "remote_id": { "type": "string" },
                                        "name": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "type": {
                                          "nullable": true,
                                          "type": "string",
                                          "enum": [
                                            "DEPARTMENT",
                                            "TEAM",
                                            "COST_CENTER"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "remote_id",
                                        "name",
                                        "type"
                                      ],
                                      "example": {
                                        "id": "4B9bKBpX5tnwjiG93TAqF7ci",
                                        "remote_id": "49",
                                        "name": "Customer Success",
                                        "type": "TEAM"
                                      }
                                    }
                                  },
                                  "teams": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": { "type": "string" },
                                        "remote_id": { "type": "string" },
                                        "name": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "type": {
                                          "nullable": true,
                                          "type": "string",
                                          "enum": [
                                            "DEPARTMENT",
                                            "TEAM",
                                            "COST_CENTER"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "remote_id",
                                        "name",
                                        "type"
                                      ],
                                      "example": {
                                        "id": "4B9bKBpX5tnwjiG93TAqF7ci",
                                        "remote_id": "49",
                                        "name": "Customer Success",
                                        "type": "TEAM"
                                      }
                                    },
                                    "description": "**(⚠️ Deprecated)** Please use the `groups` field. It includes the same data and the naming is less confusing."
                                  },
                                  "work_location": {
                                    "nullable": true,
                                    "type": "object",
                                    "properties": {
                                      "id": { "type": "string" },
                                      "remote_id": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "name": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "address": {
                                        "nullable": true,
                                        "type": "object",
                                        "properties": {
                                          "street_1": {
                                            "nullable": true,
                                            "type": "string",
                                            "default": null
                                          },
                                          "street_2": {
                                            "nullable": true,
                                            "type": "string",
                                            "default": null
                                          },
                                          "city": {
                                            "nullable": true,
                                            "type": "string",
                                            "default": null
                                          },
                                          "state": {
                                            "nullable": true,
                                            "type": "string",
                                            "default": null
                                          },
                                          "zip_code": {
                                            "nullable": true,
                                            "type": "string",
                                            "default": null
                                          },
                                          "country": {
                                            "nullable": true,
                                            "type": "string",
                                            "default": null
                                          },
                                          "raw": {
                                            "nullable": true,
                                            "type": "string",
                                            "default": null
                                          }
                                        },
                                        "required": []
                                      },
                                      "type": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "changed_at": {
                                        "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                        "type": "string",
                                        "format": "date-time",
                                        "externalDocs": {
                                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                        }
                                      },
                                      "remote_deleted_at": {
                                        "nullable": true,
                                        "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                        "type": "string",
                                        "format": "date-time",
                                        "externalDocs": {
                                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                        }
                                      },
                                      "remote_data": {
                                        "nullable": true,
                                        "type": "object",
                                        "additionalProperties": {
                                          "format": "any",
                                          "nullable": true
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "remote_id",
                                      "name",
                                      "address",
                                      "type",
                                      "changed_at",
                                      "remote_deleted_at",
                                      "remote_data"
                                    ],
                                    "example": {
                                      "id": "22st2Ji8XpncEYEak8mvQgQF",
                                      "remote_id": "1348",
                                      "name": "Kombo HQ",
                                      "address": {
                                        "city": "Berlin",
                                        "country": "Germany",
                                        "raw": "Sonnenallee 63\n12045 Berlin, Berlin\nGermany",
                                        "state": "Berlin",
                                        "street_1": "Sonnenallee 63",
                                        "street_2": null,
                                        "zip_code": "12045"
                                      },
                                      "type": "OFFICE",
                                      "changed_at": "2022-08-07T14:01:29.196Z",
                                      "remote_deleted_at": "2022-08-07T14:01:29.196Z",
                                      "remote_data": null
                                    }
                                  }
                                },
                                "required": [
                                  "employments",
                                  "time_off_balances",
                                  "manager",
                                  "groups",
                                  "teams",
                                  "work_location"
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "required": ["next", "results"],
                      "example": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                            "remote_id": "32",
                            "employee_number": "3243422",
                            "first_name": "John",
                            "last_name": "Doe",
                            "display_full_name": "John Doe",
                            "job_title": "Integrations Team Lead",
                            "work_email": "john.doe@acme.com",
                            "personal_email": "john@doe.me",
                            "mobile_phone_number": "801-555-4687",
                            "ssn": "555-32-6395",
                            "tax_id": "12 345 678 901",
                            "gender": "MALE",
                            "ethnicity": "BLACK_AFRICAN_AMERICAN",
                            "marital_status": "MARRIED",
                            "employment_status": "INACTIVE",
                            "employment_type": "FULL_TIME",
                            "avatar": "https://resources.bamboohr.com/images/photo_person_150x150.png",
                            "work_location_id": "7E2gyuv6TmvtByzBxW9Sxt53",
                            "manager_id": "9pf2pxBB8VX8EQMC9aipW2Bo",
                            "home_address": {
                              "city": "Berlin",
                              "country": "Germany",
                              "raw": "Sonnenallee 63\n12045 Berlin\nGermany",
                              "state": "Berlin",
                              "street_1": "Sonnenallee 63",
                              "street_2": null,
                              "zip_code": "12045"
                            },
                            "date_of_birth": "1986-01-01T00:00:00.000Z",
                            "start_date": "2020-04-07T00:00:00.000Z",
                            "termination_date": "2022-05-20T00:00:00.000Z",
                            "remote_created_at": "2020-04-07T12:32:01.000Z",
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null,
                            "custom_fields": {},
                            "remote_data": null,
                            "employments": [
                              {
                                "id": "12vpXR7BeqYNWDShXRgsonnm",
                                "remote_id": "859",
                                "employee_id": "8Xk99QfVKYA6vfEafEUBdEPJ",
                                "job_title": "Social Media Marketer",
                                "pay_rate": 85000,
                                "pay_period": "YEAR",
                                "pay_frequency": "SEMIMONTHLY",
                                "pay_currency": "EUR",
                                "effective_date": "2021-01-30T00:00:00.000Z",
                                "changed_at": "2022-08-07T14:01:29.196Z",
                                "remote_deleted_at": null,
                                "remote_data": null
                              }
                            ],
                            "time_off_balances": [
                              {
                                "id": "FuyRuk5NqP3qTcThED3ymTuE",
                                "remote_id": "124123",
                                "employee_id": "2Up4ZCvq1bFVzmzXG6EWzV3j",
                                "type_id": "BQJaBxRCiqN46G27VTegvkEr",
                                "balance": 14,
                                "balance_unit": "DAYS",
                                "changed_at": "2022-08-07T14:01:29.196Z",
                                "remote_deleted_at": null,
                                "used": 3,
                                "used_unit": "DAYS",
                                "remote_data": null
                              }
                            ],
                            "manager": {
                              "first_name": "John",
                              "last_name": "Doe",
                              "id": "26vafvWSRmbhNcxJYqjCzuJg",
                              "work_email": "john.doe@acme.com",
                              "remote_id": "32"
                            },
                            "groups": [
                              {
                                "id": "4B9bKBpX5tnwjiG93TAqF7ci",
                                "remote_id": "49",
                                "name": "Customer Success",
                                "type": "TEAM"
                              }
                            ],
                            "teams": [
                              {
                                "id": "4B9bKBpX5tnwjiG93TAqF7ci",
                                "remote_id": "49",
                                "name": "Customer Success",
                                "type": "TEAM"
                              }
                            ],
                            "work_location": {
                              "id": "22st2Ji8XpncEYEak8mvQgQF",
                              "remote_id": "1348",
                              "name": "Kombo HQ",
                              "address": {
                                "city": "Berlin",
                                "country": "Germany",
                                "raw": "Sonnenallee 63\n12045 Berlin, Berlin\nGermany",
                                "state": "Berlin",
                                "street_1": "Sonnenallee 63",
                                "street_2": null,
                                "zip_code": "12045"
                              },
                              "type": "OFFICE",
                              "changed_at": "2022-08-07T14:01:29.196Z",
                              "remote_deleted_at": "2022-08-07T14:01:29.196Z",
                              "remote_data": null
                            }
                          }
                        ]
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                            "remote_id": "32",
                            "employee_number": "3243422",
                            "first_name": "John",
                            "last_name": "Doe",
                            "display_full_name": "John Doe",
                            "job_title": "Integrations Team Lead",
                            "work_email": "john.doe@acme.com",
                            "personal_email": "john@doe.me",
                            "mobile_phone_number": "801-555-4687",
                            "ssn": "555-32-6395",
                            "tax_id": "12 345 678 901",
                            "gender": "MALE",
                            "ethnicity": "BLACK_AFRICAN_AMERICAN",
                            "marital_status": "MARRIED",
                            "employment_status": "INACTIVE",
                            "employment_type": "FULL_TIME",
                            "avatar": "https://resources.bamboohr.com/images/photo_person_150x150.png",
                            "work_location_id": "7E2gyuv6TmvtByzBxW9Sxt53",
                            "manager_id": "9pf2pxBB8VX8EQMC9aipW2Bo",
                            "home_address": {
                              "city": "Berlin",
                              "country": "Germany",
                              "raw": "Sonnenallee 63\n12045 Berlin\nGermany",
                              "state": "Berlin",
                              "street_1": "Sonnenallee 63",
                              "street_2": null,
                              "zip_code": "12045"
                            },
                            "date_of_birth": "1986-01-01T00:00:00.000Z",
                            "start_date": "2020-04-07T00:00:00.000Z",
                            "termination_date": "2022-05-20T00:00:00.000Z",
                            "remote_created_at": "2020-04-07T12:32:01.000Z",
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null,
                            "custom_fields": {},
                            "remote_data": null,
                            "employments": [
                              {
                                "id": "12vpXR7BeqYNWDShXRgsonnm",
                                "remote_id": "859",
                                "employee_id": "8Xk99QfVKYA6vfEafEUBdEPJ",
                                "job_title": "Social Media Marketer",
                                "pay_rate": 85000,
                                "pay_period": "YEAR",
                                "pay_frequency": "SEMIMONTHLY",
                                "pay_currency": "EUR",
                                "effective_date": "2021-01-30T00:00:00.000Z",
                                "changed_at": "2022-08-07T14:01:29.196Z",
                                "remote_deleted_at": null,
                                "remote_data": null
                              }
                            ],
                            "time_off_balances": [
                              {
                                "id": "FuyRuk5NqP3qTcThED3ymTuE",
                                "remote_id": "124123",
                                "employee_id": "2Up4ZCvq1bFVzmzXG6EWzV3j",
                                "type_id": "BQJaBxRCiqN46G27VTegvkEr",
                                "balance": 14,
                                "balance_unit": "DAYS",
                                "changed_at": "2022-08-07T14:01:29.196Z",
                                "remote_deleted_at": null,
                                "used": 3,
                                "used_unit": "DAYS",
                                "remote_data": null
                              }
                            ],
                            "manager": {
                              "first_name": "John",
                              "last_name": "Doe",
                              "id": "26vafvWSRmbhNcxJYqjCzuJg",
                              "work_email": "john.doe@acme.com",
                              "remote_id": "32"
                            },
                            "groups": [
                              {
                                "id": "4B9bKBpX5tnwjiG93TAqF7ci",
                                "remote_id": "49",
                                "name": "Customer Success",
                                "type": "TEAM"
                              }
                            ],
                            "teams": [
                              {
                                "id": "4B9bKBpX5tnwjiG93TAqF7ci",
                                "remote_id": "49",
                                "name": "Customer Success",
                                "type": "TEAM"
                              }
                            ],
                            "work_location": {
                              "id": "22st2Ji8XpncEYEak8mvQgQF",
                              "remote_id": "1348",
                              "name": "Kombo HQ",
                              "address": {
                                "city": "Berlin",
                                "country": "Germany",
                                "raw": "Sonnenallee 63\n12045 Berlin, Berlin\nGermany",
                                "state": "Berlin",
                                "street_1": "Sonnenallee 63",
                                "street_2": null,
                                "zip_code": "12045"
                              },
                              "type": "OFFICE",
                              "changed_at": "2022-08-07T14:01:29.196Z",
                              "remote_deleted_at": "2022-08-07T14:01:29.196Z",
                              "remote_data": null
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /hris/employees Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Returned when no sync has finished successfully yet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"],
                      "example": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retrieve all employees.\n\n_Not interested in most fields? You can use our [our Scopes feature](https://docs.kombo.dev/docs/scopes) to customize what data points will synced._\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"next\": \"eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=\",\n    \"results\": [\n      {\n        \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n        \"remote_id\": \"32\",\n        \"employee_number\": \"3243422\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Doe\",\n        \"display_full_name\": \"John Doe\",\n        \"job_title\": \"Integrations Team Lead\",\n        \"work_email\": \"john.doe@acme.com\",\n        \"personal_email\": \"john@doe.me\",\n        \"mobile_phone_number\": \"801-555-4687\",\n        \"ssn\": \"555-32-6395\",\n        \"tax_id\": \"12 345 678 901\",\n        \"gender\": \"MALE\",\n        \"ethnicity\": \"BLACK_AFRICAN_AMERICAN\",\n        \"marital_status\": \"MARRIED\",\n        \"employment_status\": \"INACTIVE\",\n        \"employment_type\": \"FULL_TIME\",\n        \"avatar\": \"https://resources.bamboohr.com/images/photo_person_150x150.png\",\n        \"work_location_id\": \"7E2gyuv6TmvtByzBxW9Sxt53\",\n        \"manager_id\": \"9pf2pxBB8VX8EQMC9aipW2Bo\",\n        \"home_address\": {\n          \"city\": \"Berlin\",\n          \"country\": \"Germany\",\n          \"raw\": \"Sonnenallee 63\\n12045 Berlin\\nGermany\",\n          \"state\": \"Berlin\",\n          \"street_1\": \"Sonnenallee 63\",\n          \"street_2\": null,\n          \"zip_code\": \"12045\"\n        },\n        \"date_of_birth\": \"1986-01-01T00:00:00.000Z\",\n        \"start_date\": \"2020-04-07T00:00:00.000Z\",\n        \"termination_date\": \"2022-05-20T00:00:00.000Z\",\n        \"remote_created_at\": \"2020-04-07T12:32:01.000Z\",\n        \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n        \"remote_deleted_at\": null,\n        \"custom_fields\": {},\n        \"employments\": [\n          {\n            \"id\": \"12vpXR7BeqYNWDShXRgsonnm\",\n            \"remote_id\": \"859\",\n            \"employee_id\": \"8Xk99QfVKYA6vfEafEUBdEPJ\",\n            \"job_title\": \"Social Media Marketer\",\n            \"pay_rate\": 85000,\n            \"pay_period\": \"YEAR\",\n            \"pay_frequency\": \"SEMIMONTHLY\",\n            \"pay_currency\": \"EUR\",\n            \"effective_date\": \"2021-01-30T00:00:00.000Z\",\n            \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n            \"remote_deleted_at\": null\n          }\n        ],\n        \"time_off_balances\": [\n          {\n            \"id\": \"FuyRuk5NqP3qTcThED3ymTuE\",\n            \"remote_id\": \"124123\",\n            \"employee_id\": \"2Up4ZCvq1bFVzmzXG6EWzV3j\",\n            \"type_id\": \"BQJaBxRCiqN46G27VTegvkEr\",\n            \"balance\": 14,\n            \"balance_unit\": \"DAYS\",\n            \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n            \"remote_deleted_at\": null,\n            \"used\": 3,\n            \"used_unit\": \"DAYS\"\n          }\n        ],\n        \"manager\": {\n          \"first_name\": \"John\",\n          \"last_name\": \"Doe\",\n          \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n          \"work_email\": \"john.doe@acme.com\",\n          \"remote_id\": \"32\"\n        },\n        \"groups\": [\n          {\n            \"id\": \"4B9bKBpX5tnwjiG93TAqF7ci\",\n            \"remote_id\": \"49\",\n            \"name\": \"Customer Success\",\n            \"type\": \"TEAM\"\n          }\n        ],\n        \"teams\": [\n          {\n            \"id\": \"4B9bKBpX5tnwjiG93TAqF7ci\",\n            \"remote_id\": \"49\",\n            \"name\": \"Customer Success\",\n            \"type\": \"TEAM\"\n          }\n        ],\n        \"work_location\": {\n          \"id\": \"22st2Ji8XpncEYEak8mvQgQF\",\n          \"remote_id\": \"1348\",\n          \"name\": \"Kombo HQ\",\n          \"address\": {\n            \"city\": \"Berlin\",\n            \"country\": \"Germany\",\n            \"raw\": \"Sonnenallee 63\\n12045 Berlin, Berlin\\nGermany\",\n            \"state\": \"Berlin\",\n            \"street_1\": \"Sonnenallee 63\",\n            \"street_2\": null,\n            \"zip_code\": \"12045\"\n          },\n          \"type\": \"OFFICE\",\n          \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n          \"remote_deleted_at\": \"2022-08-07T14:01:29.196Z\"\n        }\n      }\n    ]\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.\n\n_If the first sync did not finish yet, a `503` status code will be returned to ensure you don't get incomplete data. This allows you to pull until the data is complete (we recommend you to depend on our webhooks though)._",
        "summary": "Get employees",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "bamboohr:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The cursor retrieved from the previous request when paginating",
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The number of results to return per page",
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "exclusiveMinimum": false,
              "maximum": 100,
              "exclusiveMaximum": false
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter the entries based on the modification date. If you want to track entry deletion, also set the `include_deleted=true` query parameter, because otherwise, deleted entries will be hidden.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "description": "By default, deleted entries are not returned. Use the `include_deleted` query param to include deleted entries too.",
              "type": "string",
              "enum": ["true", "false"],
              "default": "false"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter by a comma-separated list of employee IDs such as `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`.",
              "type": "string"
            }
          },
          {
            "name": "employment_status",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter by the `employment_status` field.",
              "type": "string",
              "enum": ["ACTIVE", "PENDING", "INACTIVE", "LEAVE"]
            }
          }
        ],
        "tags": ["Unified HRIS API"]
      },
      "post": {
        "responses": {
          "200": {
            "description": "POST /hris/employees Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "remote_id": { "type": "string" },
                        "employee_number": {
                          "nullable": true,
                          "type": "string"
                        },
                        "first_name": { "nullable": true, "type": "string" },
                        "last_name": { "nullable": true, "type": "string" },
                        "display_full_name": {
                          "nullable": true,
                          "type": "string"
                        },
                        "job_title": { "nullable": true, "type": "string" },
                        "work_email": {
                          "nullable": true,
                          "type": "string",
                          "format": "email"
                        },
                        "personal_email": {
                          "nullable": true,
                          "type": "string",
                          "format": "email"
                        },
                        "mobile_phone_number": {
                          "nullable": true,
                          "type": "string"
                        },
                        "ssn": { "nullable": true, "type": "string" },
                        "tax_id": { "nullable": true, "type": "string" },
                        "gender": {
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": [
                                "MALE",
                                "FEMALE",
                                "NON_BINARY",
                                "NOT_SPECIFIED"
                              ]
                            },
                            {
                              "type": "string",
                              "description": "If we can't find a clear mapping: The original string passed through."
                            }
                          ],
                          "description": "One of 4 standardized values (`MALE`, `FEMALE`, `NON_BINARY`, or `NOT_SPECIFIED`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                        },
                        "ethnicity": {
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": [
                                "WHITE",
                                "ASIAN",
                                "HISPANIC_LATINO",
                                "HAWAIIAN",
                                "NATIVE_AMERICAN",
                                "BLACK_AFRICAN_AMERICAN",
                                "MULTIPLE_ETHNICITIES",
                                "DECLINE_TO_SPECIFY"
                              ]
                            },
                            {
                              "type": "string",
                              "description": "If we can't find a clear mapping: The original string passed through."
                            }
                          ],
                          "description": "One of 8 standardized values (`WHITE`, `ASIAN`, `HISPANIC_LATINO`, `HAWAIIAN`, `NATIVE_AMERICAN`, `BLACK_AFRICAN_AMERICAN`, `MULTIPLE_ETHNICITIES`, or `DECLINE_TO_SPECIFY`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                        },
                        "marital_status": {
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": [
                                "SINGLE",
                                "MARRIED",
                                "DOMESTIC_PARTNERSHIP",
                                "WIDOWED",
                                "DIVORCED",
                                "SEPARATED",
                                "NOT_MARRIED"
                              ]
                            },
                            {
                              "type": "string",
                              "description": "If we can't find a clear mapping: The original string passed through."
                            }
                          ],
                          "description": "One of 7 standardized values (`SINGLE`, `MARRIED`, `DOMESTIC_PARTNERSHIP`, `WIDOWED`, `DIVORCED`, `SEPARATED`, or `NOT_MARRIED`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                        },
                        "employment_status": {
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": ["ACTIVE", "PENDING", "INACTIVE", "LEAVE"]
                            },
                            {
                              "type": "string",
                              "description": "If we can't find a clear mapping: The original string passed through."
                            }
                          ],
                          "description": "One of 4 standardized values (`ACTIVE`, `PENDING`, `INACTIVE`, or `LEAVE`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                        },
                        "employment_type": {
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": [
                                "FULL_TIME",
                                "PART_TIME",
                                "CONTRACT",
                                "INTERNSHIP",
                                "FREELANCE",
                                "WORKING_STUDENT"
                              ]
                            },
                            {
                              "type": "string",
                              "description": "If we can't find a clear mapping: The original string passed through."
                            }
                          ],
                          "description": "One of 6 standardized values (`FULL_TIME`, `PART_TIME`, `CONTRACT`, `INTERNSHIP`, `FREELANCE`, or `WORKING_STUDENT`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                        },
                        "avatar": {
                          "nullable": true,
                          "type": "string",
                          "description": "URL to the employee's avatar. This is either the raw URL from the HR system (in cases where it can be requested without short-lived authentication) _or_ a URL to a temporarily cached version of the file hosted by Kombo. Kombo will delete the cached file after its deletion in the source system."
                        },
                        "work_location_id": {
                          "nullable": true,
                          "type": "string"
                        },
                        "manager_id": { "nullable": true, "type": "string" },
                        "home_address": {
                          "nullable": true,
                          "type": "object",
                          "properties": {
                            "street_1": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "street_2": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "city": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "state": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "zip_code": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "country": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "raw": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            }
                          },
                          "required": []
                        },
                        "date_of_birth": {
                          "nullable": true,
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "start_date": {
                          "nullable": true,
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "termination_date": {
                          "nullable": true,
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "remote_created_at": {
                          "nullable": true,
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "changed_at": {
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "remote_deleted_at": {
                          "nullable": true,
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "custom_fields": {
                          "nullable": true,
                          "type": "object",
                          "additionalProperties": {
                            "format": "any",
                            "nullable": true
                          }
                        },
                        "remote_data": {
                          "nullable": true,
                          "type": "object",
                          "additionalProperties": {
                            "format": "any",
                            "nullable": true
                          }
                        }
                      },
                      "required": [
                        "id",
                        "remote_id",
                        "employee_number",
                        "first_name",
                        "last_name",
                        "display_full_name",
                        "job_title",
                        "work_email",
                        "personal_email",
                        "mobile_phone_number",
                        "ssn",
                        "tax_id",
                        "gender",
                        "ethnicity",
                        "marital_status",
                        "employment_status",
                        "employment_type",
                        "avatar",
                        "work_location_id",
                        "manager_id",
                        "home_address",
                        "date_of_birth",
                        "start_date",
                        "termination_date",
                        "remote_created_at",
                        "changed_at",
                        "remote_deleted_at",
                        "custom_fields",
                        "remote_data"
                      ],
                      "example": {
                        "id": "26vafvWSRmbhNcxJYqjCzuJg",
                        "remote_id": "32",
                        "employee_number": "3243422",
                        "first_name": "John",
                        "last_name": "Doe",
                        "display_full_name": "John Doe",
                        "job_title": "Integrations Team Lead",
                        "work_email": "john.doe@acme.com",
                        "personal_email": "john@doe.me",
                        "mobile_phone_number": "801-555-4687",
                        "ssn": "555-32-6395",
                        "tax_id": "12 345 678 901",
                        "gender": "MALE",
                        "ethnicity": "BLACK_AFRICAN_AMERICAN",
                        "marital_status": "MARRIED",
                        "employment_status": "INACTIVE",
                        "employment_type": "FULL_TIME",
                        "avatar": "https://resources.bamboohr.com/images/photo_person_150x150.png",
                        "work_location_id": "7E2gyuv6TmvtByzBxW9Sxt53",
                        "manager_id": "9pf2pxBB8VX8EQMC9aipW2Bo",
                        "home_address": {
                          "city": "Berlin",
                          "country": "Germany",
                          "raw": "Sonnenallee 63\n12045 Berlin\nGermany",
                          "state": "Berlin",
                          "street_1": "Sonnenallee 63",
                          "street_2": null,
                          "zip_code": "12045"
                        },
                        "date_of_birth": "1986-01-01T00:00:00.000Z",
                        "start_date": "2020-04-07T00:00:00.000Z",
                        "termination_date": "2022-05-20T00:00:00.000Z",
                        "remote_created_at": "2020-04-07T12:32:01.000Z",
                        "changed_at": "2022-08-07T14:01:29.196Z",
                        "remote_deleted_at": null,
                        "custom_fields": {},
                        "remote_data": null
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "id": "26vafvWSRmbhNcxJYqjCzuJg",
                        "remote_id": "32",
                        "employee_number": "3243422",
                        "first_name": "John",
                        "last_name": "Doe",
                        "display_full_name": "John Doe",
                        "job_title": "Integrations Team Lead",
                        "work_email": "john.doe@acme.com",
                        "personal_email": "john@doe.me",
                        "mobile_phone_number": "801-555-4687",
                        "ssn": "555-32-6395",
                        "tax_id": "12 345 678 901",
                        "gender": "MALE",
                        "ethnicity": "BLACK_AFRICAN_AMERICAN",
                        "marital_status": "MARRIED",
                        "employment_status": "INACTIVE",
                        "employment_type": "FULL_TIME",
                        "avatar": "https://resources.bamboohr.com/images/photo_person_150x150.png",
                        "work_location_id": "7E2gyuv6TmvtByzBxW9Sxt53",
                        "manager_id": "9pf2pxBB8VX8EQMC9aipW2Bo",
                        "home_address": {
                          "city": "Berlin",
                          "country": "Germany",
                          "raw": "Sonnenallee 63\n12045 Berlin\nGermany",
                          "state": "Berlin",
                          "street_1": "Sonnenallee 63",
                          "street_2": null,
                          "zip_code": "12045"
                        },
                        "date_of_birth": "1986-01-01T00:00:00.000Z",
                        "start_date": "2020-04-07T00:00:00.000Z",
                        "termination_date": "2022-05-20T00:00:00.000Z",
                        "remote_created_at": "2020-04-07T12:32:01.000Z",
                        "changed_at": "2022-08-07T14:01:29.196Z",
                        "remote_deleted_at": null,
                        "custom_fields": {},
                        "remote_data": null
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "POST /hris/employees Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create a new employee.\n\nRequires the permission \"Create and manage employees\".\n\n\n```json\n{\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"work_email\": \"john.doe@acme.com\",\n  \"ssn\": \"555-32-6395\",\n  \"gender\": \"MALE\",\n  \"marital_status\": \"MARRIED\",\n  \"job_title\": \"Integrations Team Lead\",\n  \"home_address\": {\n    \"city\": \"Berlin\",\n    \"country\": \"Germany\",\n    \"state\": \"Berlin\",\n    \"street_1\": \"Sonnenallee 63\",\n    \"zip_code\": \"12045\"\n  },\n  \"date_of_birth\": \"1986-01-01\",\n  \"start_date\": \"2020-04-07\",\n  \"termination_date\": \"2022-05-20\",\n  \"tax_id\": \"12 345 678 901\"\n}\n```",
        "summary": "Create employee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "POST /hris/employees request body",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "first_name": { "type": "string" },
                      "last_name": { "type": "string" },
                      "work_email": { "type": "string", "format": "email" },
                      "ssn": {
                        "type": "string",
                        "description": "Social security number of the employee."
                      },
                      "gender": {
                        "type": "string",
                        "enum": [
                          "MALE",
                          "FEMALE",
                          "NON_BINARY",
                          "NOT_SPECIFIED"
                        ],
                        "description": "The gender of the employee."
                      },
                      "marital_status": {
                        "type": "string",
                        "enum": [
                          "SINGLE",
                          "MARRIED",
                          "DOMESTIC_PARTNERSHIP",
                          "WIDOWED",
                          "DIVORCED",
                          "SEPARATED",
                          "NOT_MARRIED"
                        ],
                        "description": "Marital status of an employee."
                      },
                      "job_title": {
                        "type": "string",
                        "description": "Title of the position this person is working in."
                      },
                      "home_address": {
                        "type": "object",
                        "properties": {
                          "street_1": { "type": "string" },
                          "street_2": { "type": "string" },
                          "city": { "type": "string" },
                          "state": { "type": "string" },
                          "zip_code": { "type": "string" },
                          "country": {
                            "type": "string",
                            "description": "Some tools allow free text but most require `ISO 3166-1 alpha-2` codes. For systems that have other formats, Kombo transforms the ISO Codes to the appropriate value."
                          }
                        },
                        "required": [],
                        "description": "Nested object of the home address."
                      },
                      "date_of_birth": {
                        "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
                        "externalDocs": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                        }
                      },
                      "start_date": {
                        "description": "Start date of the employee. Also considered to the hire date.",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
                        "externalDocs": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                        }
                      },
                      "termination_date": {
                        "description": "Date on which the employment ends.",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
                        "externalDocs": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                        }
                      },
                      "tax_id": {
                        "type": "string",
                        "description": "Tax ID of the employee. Most contries have different formats of that. In Germany, this is the `Steuer ID` and in the US it's the `TIN`."
                      }
                    },
                    "required": [],
                    "example": {
                      "first_name": "John",
                      "last_name": "Doe",
                      "work_email": "john.doe@acme.com",
                      "ssn": "555-32-6395",
                      "tax_id": "12 345 678 901",
                      "gender": "MALE",
                      "marital_status": "MARRIED",
                      "date_of_birth": "1986-01-01",
                      "start_date": "2020-04-07",
                      "termination_date": "2022-05-20",
                      "job_title": "Integrations Team Lead",
                      "home_address": {
                        "city": "Berlin",
                        "country": "Germany",
                        "state": "Berlin",
                        "street_1": "Sonnenallee 63",
                        "zip_code": "12045"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "example1": {
                  "value": {
                    "first_name": "John",
                    "last_name": "Doe",
                    "work_email": "john.doe@acme.com",
                    "ssn": "555-32-6395",
                    "tax_id": "12 345 678 901",
                    "gender": "MALE",
                    "marital_status": "MARRIED",
                    "date_of_birth": "1986-01-01",
                    "start_date": "2020-04-07",
                    "termination_date": "2022-05-20",
                    "job_title": "Integrations Team Lead",
                    "home_address": {
                      "city": "Berlin",
                      "country": "Germany",
                      "state": "Berlin",
                      "street_1": "Sonnenallee 63",
                      "zip_code": "12045"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Unified HRIS API"],
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "bamboohr:HWUTwvyx2wLoSUHphiWVrp28"
          }
        ]
      }
    },
    "/hris/employees/{employee_id}": {
      "patch": {
        "responses": {
          "200": {
            "description": "PATCH /hris/employees/:employee_id Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "remote_id": { "type": "string" },
                        "employee_number": {
                          "nullable": true,
                          "type": "string"
                        },
                        "first_name": { "nullable": true, "type": "string" },
                        "last_name": { "nullable": true, "type": "string" },
                        "display_full_name": {
                          "nullable": true,
                          "type": "string"
                        },
                        "job_title": { "nullable": true, "type": "string" },
                        "work_email": {
                          "nullable": true,
                          "type": "string",
                          "format": "email"
                        },
                        "personal_email": {
                          "nullable": true,
                          "type": "string",
                          "format": "email"
                        },
                        "mobile_phone_number": {
                          "nullable": true,
                          "type": "string"
                        },
                        "ssn": { "nullable": true, "type": "string" },
                        "tax_id": { "nullable": true, "type": "string" },
                        "gender": {
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": [
                                "MALE",
                                "FEMALE",
                                "NON_BINARY",
                                "NOT_SPECIFIED"
                              ]
                            },
                            {
                              "type": "string",
                              "description": "If we can't find a clear mapping: The original string passed through."
                            }
                          ],
                          "description": "One of 4 standardized values (`MALE`, `FEMALE`, `NON_BINARY`, or `NOT_SPECIFIED`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                        },
                        "ethnicity": {
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": [
                                "WHITE",
                                "ASIAN",
                                "HISPANIC_LATINO",
                                "HAWAIIAN",
                                "NATIVE_AMERICAN",
                                "BLACK_AFRICAN_AMERICAN",
                                "MULTIPLE_ETHNICITIES",
                                "DECLINE_TO_SPECIFY"
                              ]
                            },
                            {
                              "type": "string",
                              "description": "If we can't find a clear mapping: The original string passed through."
                            }
                          ],
                          "description": "One of 8 standardized values (`WHITE`, `ASIAN`, `HISPANIC_LATINO`, `HAWAIIAN`, `NATIVE_AMERICAN`, `BLACK_AFRICAN_AMERICAN`, `MULTIPLE_ETHNICITIES`, or `DECLINE_TO_SPECIFY`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                        },
                        "marital_status": {
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": [
                                "SINGLE",
                                "MARRIED",
                                "DOMESTIC_PARTNERSHIP",
                                "WIDOWED",
                                "DIVORCED",
                                "SEPARATED",
                                "NOT_MARRIED"
                              ]
                            },
                            {
                              "type": "string",
                              "description": "If we can't find a clear mapping: The original string passed through."
                            }
                          ],
                          "description": "One of 7 standardized values (`SINGLE`, `MARRIED`, `DOMESTIC_PARTNERSHIP`, `WIDOWED`, `DIVORCED`, `SEPARATED`, or `NOT_MARRIED`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                        },
                        "employment_status": {
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": ["ACTIVE", "PENDING", "INACTIVE", "LEAVE"]
                            },
                            {
                              "type": "string",
                              "description": "If we can't find a clear mapping: The original string passed through."
                            }
                          ],
                          "description": "One of 4 standardized values (`ACTIVE`, `PENDING`, `INACTIVE`, or `LEAVE`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                        },
                        "employment_type": {
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": [
                                "FULL_TIME",
                                "PART_TIME",
                                "CONTRACT",
                                "INTERNSHIP",
                                "FREELANCE",
                                "WORKING_STUDENT"
                              ]
                            },
                            {
                              "type": "string",
                              "description": "If we can't find a clear mapping: The original string passed through."
                            }
                          ],
                          "description": "One of 6 standardized values (`FULL_TIME`, `PART_TIME`, `CONTRACT`, `INTERNSHIP`, `FREELANCE`, or `WORKING_STUDENT`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                        },
                        "avatar": {
                          "nullable": true,
                          "type": "string",
                          "description": "URL to the employee's avatar. This is either the raw URL from the HR system (in cases where it can be requested without short-lived authentication) _or_ a URL to a temporarily cached version of the file hosted by Kombo. Kombo will delete the cached file after its deletion in the source system."
                        },
                        "work_location_id": {
                          "nullable": true,
                          "type": "string"
                        },
                        "manager_id": { "nullable": true, "type": "string" },
                        "home_address": {
                          "nullable": true,
                          "type": "object",
                          "properties": {
                            "street_1": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "street_2": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "city": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "state": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "zip_code": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "country": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "raw": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            }
                          },
                          "required": []
                        },
                        "date_of_birth": {
                          "nullable": true,
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "start_date": {
                          "nullable": true,
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "termination_date": {
                          "nullable": true,
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "remote_created_at": {
                          "nullable": true,
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "changed_at": {
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "remote_deleted_at": {
                          "nullable": true,
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "custom_fields": {
                          "nullable": true,
                          "type": "object",
                          "additionalProperties": {
                            "format": "any",
                            "nullable": true
                          }
                        },
                        "remote_data": {
                          "nullable": true,
                          "type": "object",
                          "additionalProperties": {
                            "format": "any",
                            "nullable": true
                          }
                        }
                      },
                      "required": [
                        "id",
                        "remote_id",
                        "employee_number",
                        "first_name",
                        "last_name",
                        "display_full_name",
                        "job_title",
                        "work_email",
                        "personal_email",
                        "mobile_phone_number",
                        "ssn",
                        "tax_id",
                        "gender",
                        "ethnicity",
                        "marital_status",
                        "employment_status",
                        "employment_type",
                        "avatar",
                        "work_location_id",
                        "manager_id",
                        "home_address",
                        "date_of_birth",
                        "start_date",
                        "termination_date",
                        "remote_created_at",
                        "changed_at",
                        "remote_deleted_at",
                        "custom_fields",
                        "remote_data"
                      ],
                      "example": {
                        "id": "26vafvWSRmbhNcxJYqjCzuJg",
                        "remote_id": "32",
                        "employee_number": "3243422",
                        "first_name": "John",
                        "last_name": "Doe",
                        "display_full_name": "John Doe",
                        "job_title": "Integrations Team Lead",
                        "work_email": "john.doe@acme.com",
                        "personal_email": "john@doe.me",
                        "mobile_phone_number": "801-555-4687",
                        "ssn": "555-32-6395",
                        "tax_id": "12 345 678 901",
                        "gender": "MALE",
                        "ethnicity": "BLACK_AFRICAN_AMERICAN",
                        "marital_status": "MARRIED",
                        "employment_status": "INACTIVE",
                        "employment_type": "FULL_TIME",
                        "avatar": "https://resources.bamboohr.com/images/photo_person_150x150.png",
                        "work_location_id": "7E2gyuv6TmvtByzBxW9Sxt53",
                        "manager_id": "9pf2pxBB8VX8EQMC9aipW2Bo",
                        "home_address": {
                          "city": "Berlin",
                          "country": "Germany",
                          "raw": "Sonnenallee 63\n12045 Berlin\nGermany",
                          "state": "Berlin",
                          "street_1": "Sonnenallee 63",
                          "street_2": null,
                          "zip_code": "12045"
                        },
                        "date_of_birth": "1986-01-01T00:00:00.000Z",
                        "start_date": "2020-04-07T00:00:00.000Z",
                        "termination_date": "2022-05-20T00:00:00.000Z",
                        "remote_created_at": "2020-04-07T12:32:01.000Z",
                        "changed_at": "2022-08-07T14:01:29.196Z",
                        "remote_deleted_at": null,
                        "custom_fields": {},
                        "remote_data": null
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "id": "26vafvWSRmbhNcxJYqjCzuJg",
                        "remote_id": "32",
                        "employee_number": "3243422",
                        "first_name": "John",
                        "last_name": "Doe",
                        "display_full_name": "John Doe",
                        "job_title": "Integrations Team Lead",
                        "work_email": "john.doe@acme.com",
                        "personal_email": "john@doe.me",
                        "mobile_phone_number": "801-555-4687",
                        "ssn": "555-32-6395",
                        "tax_id": "12 345 678 901",
                        "gender": "MALE",
                        "ethnicity": "BLACK_AFRICAN_AMERICAN",
                        "marital_status": "MARRIED",
                        "employment_status": "INACTIVE",
                        "employment_type": "FULL_TIME",
                        "avatar": "https://resources.bamboohr.com/images/photo_person_150x150.png",
                        "work_location_id": "7E2gyuv6TmvtByzBxW9Sxt53",
                        "manager_id": "9pf2pxBB8VX8EQMC9aipW2Bo",
                        "home_address": {
                          "city": "Berlin",
                          "country": "Germany",
                          "raw": "Sonnenallee 63\n12045 Berlin\nGermany",
                          "state": "Berlin",
                          "street_1": "Sonnenallee 63",
                          "street_2": null,
                          "zip_code": "12045"
                        },
                        "date_of_birth": "1986-01-01T00:00:00.000Z",
                        "start_date": "2020-04-07T00:00:00.000Z",
                        "termination_date": "2022-05-20T00:00:00.000Z",
                        "remote_created_at": "2020-04-07T12:32:01.000Z",
                        "changed_at": "2022-08-07T14:01:29.196Z",
                        "remote_deleted_at": null,
                        "custom_fields": {},
                        "remote_data": null
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "PATCH /hris/employees/:employee_id Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Update an employee.\n\nRequires the permission \"Create and manage employees\".\n\n\n```json\n{\n  \"employee_id\": \"BkgfzSr5muN9cUTMD4wDQFn4\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"work_email\": \"john.doe@acme.com\",\n  \"ssn\": \"555-32-6395\",\n  \"tax_id\": \"12 345 678 901\",\n  \"gender\": \"MALE\",\n  \"marital_status\": \"MARRIED\",\n  \"date_of_birth\": \"1986-01-01\",\n  \"start_date\": \"2020-04-07\",\n  \"termination_date\": \"2022-05-20\",\n  \"job_title\": \"Integrations Team Lead\",\n  \"home_address\": {\n    \"city\": \"Berlin\",\n    \"country\": \"Germany\",\n    \"state\": \"Berlin\",\n    \"street_1\": \"Sonnenallee 63\",\n    \"zip_code\": \"12045\"\n  }\n}\n```",
        "summary": "Update employee",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "bamboohr:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "ID of the employee that should be updated. You can use their Kombo `id` or their ID in the remote system by prefixing it with `remote:` (e.g., `remote:12312`)",
              "type": "string"
            },
            "examples": { "example1": { "value": "BkgfzSr5muN9cUTMD4wDQFn4" } }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "PATCH /hris/employees/:employee_id request body",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "first_name": { "type": "string" },
                      "last_name": { "type": "string" },
                      "work_email": { "type": "string", "format": "email" },
                      "ssn": {
                        "type": "string",
                        "description": "Social security number of the employee."
                      },
                      "gender": {
                        "type": "string",
                        "enum": [
                          "MALE",
                          "FEMALE",
                          "NON_BINARY",
                          "NOT_SPECIFIED"
                        ],
                        "description": "The gender of the employee."
                      },
                      "marital_status": {
                        "type": "string",
                        "enum": [
                          "SINGLE",
                          "MARRIED",
                          "DOMESTIC_PARTNERSHIP",
                          "WIDOWED",
                          "DIVORCED",
                          "SEPARATED",
                          "NOT_MARRIED"
                        ],
                        "description": "Marital status of an employee."
                      },
                      "job_title": {
                        "type": "string",
                        "description": "Title of the position this person is working in."
                      },
                      "home_address": {
                        "type": "object",
                        "properties": {
                          "street_1": { "type": "string" },
                          "street_2": { "type": "string" },
                          "city": { "type": "string" },
                          "state": { "type": "string" },
                          "zip_code": { "type": "string" },
                          "country": {
                            "type": "string",
                            "description": "Some tools allow free text but most require `ISO 3166-1 alpha-2` codes. For systems that have other formats, Kombo transforms the ISO Codes to the appropriate value."
                          }
                        },
                        "required": [],
                        "description": "Nested object of the home address."
                      },
                      "date_of_birth": {
                        "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
                        "externalDocs": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                        }
                      },
                      "start_date": {
                        "description": "Start date of the employee. Also considered to the hire date.",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
                        "externalDocs": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                        }
                      },
                      "termination_date": {
                        "description": "Date on which the employment ends.",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
                        "externalDocs": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                        }
                      },
                      "tax_id": {
                        "type": "string",
                        "description": "Tax ID of the employee. Most contries have different formats of that. In Germany, this is the `Steuer ID` and in the US it's the `TIN`."
                      }
                    },
                    "required": [],
                    "example": {
                      "first_name": "John",
                      "last_name": "Doe",
                      "work_email": "john.doe@acme.com",
                      "ssn": "555-32-6395",
                      "tax_id": "12 345 678 901",
                      "gender": "MALE",
                      "marital_status": "MARRIED",
                      "date_of_birth": "1986-01-01",
                      "start_date": "2020-04-07",
                      "termination_date": "2022-05-20",
                      "job_title": "Integrations Team Lead",
                      "home_address": {
                        "city": "Berlin",
                        "country": "Germany",
                        "state": "Berlin",
                        "street_1": "Sonnenallee 63",
                        "zip_code": "12045"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "example1": {
                  "value": {
                    "first_name": "John",
                    "last_name": "Doe",
                    "work_email": "john.doe@acme.com",
                    "ssn": "555-32-6395",
                    "tax_id": "12 345 678 901",
                    "gender": "MALE",
                    "marital_status": "MARRIED",
                    "date_of_birth": "1986-01-01",
                    "start_date": "2020-04-07",
                    "termination_date": "2022-05-20",
                    "job_title": "Integrations Team Lead",
                    "home_address": {
                      "city": "Berlin",
                      "country": "Germany",
                      "state": "Berlin",
                      "street_1": "Sonnenallee 63",
                      "zip_code": "12045"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Unified HRIS API"]
      }
    },
    "/hris/employees/{employee_id}/compensations": {
      "put": {
        "responses": {
          "200": {
            "description": "PUT /hris/employees/:employee_id/compensations Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": ["status", "data"]
                }
              }
            }
          },
          "400": {
            "description": "PUT /hris/employees/:employee_id/compensations Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Sets the compensations for an employee on the specified effective date. Other compensations will end at the effective date. That means, if you would like to add a compensation, you also have to include the compensations that you would like to keep.\n\nRequires the permission \"Manage payroll\".\n\n\n```json\n{\n  \"employee_id\": \"3bdhemmSP1TPQDGWtRveRot9\",\n  \"effective_date\": \"2022-12-01\",\n  \"compensations\": [\n    {\n      \"amount\": 4500,\n      \"currency\": \"EUR\",\n      \"period\": \"MONTH\"\n    }\n  ]\n}\n```",
        "summary": "Set compensations",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "bamboohr:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "ID of the employee that should be updated. You can use their Kombo `id` or their ID in the remote system by prefixing it with `remote:` (e.g., `remote:12312`)",
              "type": "string"
            },
            "examples": { "example1": { "value": "3bdhemmSP1TPQDGWtRveRot9" } }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "PUT /hris/employees/:employee_id/compensations request body",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "effective_date": {
                        "description": "Date from which the submitted compensations should be valid. Please note that it might not be possible to set compensations for the past if the payroll was already run.",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
                        "externalDocs": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                        }
                      },
                      "compensations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "format": "double",
                              "minimum": 5e-324,
                              "exclusiveMinimum": false,
                              "maximum": 1.7976931348623157e308,
                              "exclusiveMaximum": false,
                              "description": "The amount that this employee will be paid."
                            },
                            "currency": {
                              "type": "string",
                              "enum": ["EUR"],
                              "description": "The currency in which the employee gets paid. Currently, only euro is supported as integrated systems only work with Euro."
                            },
                            "period": {
                              "type": "string",
                              "enum": ["HOUR", "MONTH"],
                              "description": "The period for which the specified amount is paid. Currently, integrated systems only support \"HOUR\" and \"MONTH\"."
                            }
                          },
                          "required": ["amount", "currency", "period"]
                        }
                      }
                    },
                    "required": ["effective_date", "compensations"],
                    "example": {
                      "effective_date": "2022-12-01",
                      "compensations": [
                        { "amount": 4500, "currency": "EUR", "period": "MONTH" }
                      ]
                    }
                  }
                ]
              },
              "examples": {
                "example1": {
                  "value": {
                    "effective_date": "2022-12-01",
                    "compensations": [
                      { "amount": 4500, "currency": "EUR", "period": "MONTH" }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": ["Unified HRIS API"]
      }
    },
    "/hris/teams": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /hris/teams Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "next": { "nullable": true, "type": "string" },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string" },
                              "name": { "nullable": true, "type": "string" },
                              "remote_id": { "type": "string" },
                              "changed_at": {
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "remote_deleted_at": {
                                "nullable": true,
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "type": {
                                "nullable": true,
                                "type": "string",
                                "enum": ["DEPARTMENT", "TEAM", "COST_CENTER"]
                              },
                              "remote_data": {
                                "nullable": true,
                                "type": "object",
                                "additionalProperties": {
                                  "format": "any",
                                  "nullable": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "remote_id",
                              "changed_at",
                              "remote_deleted_at",
                              "type",
                              "remote_data"
                            ],
                            "example": {
                              "id": "4B9bKBpX5tnwjiG93TAqF7ci",
                              "name": "Customer Success",
                              "remote_id": "49",
                              "changed_at": "2022-08-07T14:01:29.196Z",
                              "remote_deleted_at": null,
                              "type": "TEAM",
                              "remote_data": null
                            }
                          }
                        }
                      },
                      "required": ["next", "results"],
                      "example": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "4B9bKBpX5tnwjiG93TAqF7ci",
                            "name": "Customer Success",
                            "remote_id": "49",
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null,
                            "type": "TEAM",
                            "remote_data": null
                          }
                        ]
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "4B9bKBpX5tnwjiG93TAqF7ci",
                            "name": "Customer Success",
                            "remote_id": "49",
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null,
                            "type": "TEAM",
                            "remote_data": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /hris/teams Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Returned when no sync has finished successfully yet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"],
                      "example": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "**(⚠️ Deprecated)** Please use [the `/groups` endpoint](https://kombo-staging.readme.io/reference/get_hris-groups) instead. It returns the same data but the naming makes more sense as the model not only includes teams but also departments and cost centers.\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"next\": \"eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=\",\n    \"results\": [\n      {\n        \"id\": \"4B9bKBpX5tnwjiG93TAqF7ci\",\n        \"name\": \"Customer Success\",\n        \"remote_id\": \"49\",\n        \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n        \"remote_deleted_at\": null,\n        \"type\": \"TEAM\"\n      }\n    ]\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.\n\n_If the first sync did not finish yet, a `503` status code will be returned to ensure you don't get incomplete data. This allows you to pull until the data is complete (we recommend you to depend on our webhooks though)._",
        "summary": "Get teams (deprecated)",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "bamboohr:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The cursor retrieved from the previous request when paginating",
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The number of results to return per page",
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "exclusiveMinimum": false,
              "maximum": 100,
              "exclusiveMaximum": false
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter the entries based on the modification date. If you want to track entry deletion, also set the `include_deleted=true` query parameter, because otherwise, deleted entries will be hidden.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "description": "By default, deleted entries are not returned. Use the `include_deleted` query param to include deleted entries too.",
              "type": "string",
              "enum": ["true", "false"],
              "default": "false"
            }
          }
        ],
        "tags": ["Unified HRIS API"]
      }
    },
    "/hris/groups": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /hris/groups Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "next": { "nullable": true, "type": "string" },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string" },
                              "name": { "nullable": true, "type": "string" },
                              "remote_id": { "type": "string" },
                              "changed_at": {
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "remote_deleted_at": {
                                "nullable": true,
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "type": {
                                "nullable": true,
                                "type": "string",
                                "enum": ["DEPARTMENT", "TEAM", "COST_CENTER"]
                              },
                              "remote_data": {
                                "nullable": true,
                                "type": "object",
                                "additionalProperties": {
                                  "format": "any",
                                  "nullable": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "remote_id",
                              "changed_at",
                              "remote_deleted_at",
                              "type",
                              "remote_data"
                            ],
                            "example": {
                              "id": "4B9bKBpX5tnwjiG93TAqF7ci",
                              "name": "Customer Success",
                              "remote_id": "49",
                              "changed_at": "2022-08-07T14:01:29.196Z",
                              "remote_deleted_at": null,
                              "type": "TEAM",
                              "remote_data": null
                            }
                          }
                        }
                      },
                      "required": ["next", "results"],
                      "example": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "4B9bKBpX5tnwjiG93TAqF7ci",
                            "name": "Customer Success",
                            "remote_id": "49",
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null,
                            "type": "TEAM",
                            "remote_data": null
                          }
                        ]
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "4B9bKBpX5tnwjiG93TAqF7ci",
                            "name": "Customer Success",
                            "remote_id": "49",
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null,
                            "type": "TEAM",
                            "remote_data": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /hris/groups Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Returned when no sync has finished successfully yet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"],
                      "example": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retrieve all \"groups\" (teams, departments, and cost centers).\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"next\": \"eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=\",\n    \"results\": [\n      {\n        \"id\": \"4B9bKBpX5tnwjiG93TAqF7ci\",\n        \"name\": \"Customer Success\",\n        \"remote_id\": \"49\",\n        \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n        \"remote_deleted_at\": null,\n        \"type\": \"TEAM\"\n      }\n    ]\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.\n\n_If the first sync did not finish yet, a `503` status code will be returned to ensure you don't get incomplete data. This allows you to pull until the data is complete (we recommend you to depend on our webhooks though)._",
        "summary": "Get groups",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "bamboohr:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The cursor retrieved from the previous request when paginating",
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The number of results to return per page",
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "exclusiveMinimum": false,
              "maximum": 100,
              "exclusiveMaximum": false
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter the entries based on the modification date. If you want to track entry deletion, also set the `include_deleted=true` query parameter, because otherwise, deleted entries will be hidden.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "description": "By default, deleted entries are not returned. Use the `include_deleted` query param to include deleted entries too.",
              "type": "string",
              "enum": ["true", "false"],
              "default": "false"
            }
          }
        ],
        "tags": ["Unified HRIS API"]
      }
    },
    "/hris/employments": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /hris/employments Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "next": { "nullable": true, "type": "string" },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string" },
                              "remote_id": {
                                "nullable": true,
                                "type": "string"
                              },
                              "employee_id": { "type": "string" },
                              "job_title": {
                                "nullable": true,
                                "type": "string",
                                "description": "**(⚠️ Deprecated)** We now provide the `job_title` directly on the employee model."
                              },
                              "pay_rate": {
                                "nullable": true,
                                "type": "number",
                                "format": "double",
                                "minimum": 5e-324,
                                "exclusiveMinimum": false,
                                "maximum": 1.7976931348623157e308,
                                "exclusiveMaximum": false
                              },
                              "pay_period": {
                                "nullable": true,
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "HOUR",
                                      "DAY",
                                      "WEEK",
                                      "TWO_WEEKS",
                                      "HALF_MONTH",
                                      "MONTH",
                                      "TWO_MONTHS",
                                      "QUARTER",
                                      "HALF_YEAR",
                                      "YEAR"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "description": "If we can't find a clear mapping: The original string passed through."
                                  }
                                ],
                                "description": "One of 10 standardized values (`HOUR`, `DAY`, `WEEK`, `TWO_WEEKS`, `HALF_MONTH`, `MONTH`, `TWO_MONTHS`, `QUARTER`, `HALF_YEAR`, or `YEAR`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                              },
                              "pay_frequency": {
                                "nullable": true,
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "WEEKLY",
                                      "BIWEEKLY",
                                      "MONTHLY",
                                      "SEMIMONTHLY",
                                      "QUARTERLY",
                                      "SEMIANNUALLY",
                                      "ANNUALLY",
                                      "PRO_RATA"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "description": "If we can't find a clear mapping: The original string passed through."
                                  }
                                ],
                                "description": "One of 8 standardized values (`WEEKLY`, `BIWEEKLY`, `MONTHLY`, `SEMIMONTHLY`, `QUARTERLY`, `SEMIANNUALLY`, `ANNUALLY`, or `PRO_RATA`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                              },
                              "pay_currency": {
                                "nullable": true,
                                "type": "string"
                              },
                              "effective_date": {
                                "nullable": true,
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "changed_at": {
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "remote_deleted_at": {
                                "nullable": true,
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "remote_data": {
                                "nullable": true,
                                "type": "object",
                                "additionalProperties": {
                                  "format": "any",
                                  "nullable": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "remote_id",
                              "employee_id",
                              "job_title",
                              "pay_rate",
                              "pay_period",
                              "pay_frequency",
                              "pay_currency",
                              "effective_date",
                              "changed_at",
                              "remote_deleted_at",
                              "remote_data"
                            ],
                            "example": {
                              "id": "12vpXR7BeqYNWDShXRgsonnm",
                              "remote_id": "859",
                              "employee_id": "8Xk99QfVKYA6vfEafEUBdEPJ",
                              "job_title": "Social Media Marketer",
                              "pay_rate": 85000,
                              "pay_period": "YEAR",
                              "pay_frequency": "SEMIMONTHLY",
                              "pay_currency": "EUR",
                              "effective_date": "2021-01-30T00:00:00.000Z",
                              "changed_at": "2022-08-07T14:01:29.196Z",
                              "remote_deleted_at": null,
                              "remote_data": null
                            }
                          }
                        }
                      },
                      "required": ["next", "results"],
                      "example": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "12vpXR7BeqYNWDShXRgsonnm",
                            "remote_id": "859",
                            "employee_id": "8Xk99QfVKYA6vfEafEUBdEPJ",
                            "job_title": "Social Media Marketer",
                            "pay_rate": 85000,
                            "pay_period": "YEAR",
                            "pay_frequency": "SEMIMONTHLY",
                            "pay_currency": "EUR",
                            "effective_date": "2021-01-30T00:00:00.000Z",
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null,
                            "remote_data": null
                          }
                        ]
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "12vpXR7BeqYNWDShXRgsonnm",
                            "remote_id": "859",
                            "employee_id": "8Xk99QfVKYA6vfEafEUBdEPJ",
                            "job_title": "Social Media Marketer",
                            "pay_rate": 85000,
                            "pay_period": "YEAR",
                            "pay_frequency": "SEMIMONTHLY",
                            "pay_currency": "EUR",
                            "effective_date": "2021-01-30T00:00:00.000Z",
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null,
                            "remote_data": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /hris/employments Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Returned when no sync has finished successfully yet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"],
                      "example": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retrieve all employments.\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"next\": \"eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=\",\n    \"results\": [\n      {\n        \"id\": \"12vpXR7BeqYNWDShXRgsonnm\",\n        \"remote_id\": \"859\",\n        \"employee_id\": \"8Xk99QfVKYA6vfEafEUBdEPJ\",\n        \"job_title\": \"Social Media Marketer\",\n        \"pay_rate\": 85000,\n        \"pay_period\": \"YEAR\",\n        \"pay_frequency\": \"SEMIMONTHLY\",\n        \"pay_currency\": \"EUR\",\n        \"effective_date\": \"2021-01-30T00:00:00.000Z\",\n        \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n        \"remote_deleted_at\": null\n      }\n    ]\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.\n\n_If the first sync did not finish yet, a `503` status code will be returned to ensure you don't get incomplete data. This allows you to pull until the data is complete (we recommend you to depend on our webhooks though)._",
        "summary": "Get employments",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "bamboohr:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The cursor retrieved from the previous request when paginating",
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The number of results to return per page",
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "exclusiveMinimum": false,
              "maximum": 100,
              "exclusiveMaximum": false
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter the entries based on the modification date. If you want to track entry deletion, also set the `include_deleted=true` query parameter, because otherwise, deleted entries will be hidden.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "description": "By default, deleted entries are not returned. Use the `include_deleted` query param to include deleted entries too.",
              "type": "string",
              "enum": ["true", "false"],
              "default": "false"
            }
          }
        ],
        "tags": ["Unified HRIS API"]
      }
    },
    "/hris/locations": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /hris/locations Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "next": { "nullable": true, "type": "string" },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string" },
                              "remote_id": {
                                "nullable": true,
                                "type": "string"
                              },
                              "name": { "nullable": true, "type": "string" },
                              "address": {
                                "nullable": true,
                                "type": "object",
                                "properties": {
                                  "street_1": {
                                    "nullable": true,
                                    "type": "string",
                                    "default": null
                                  },
                                  "street_2": {
                                    "nullable": true,
                                    "type": "string",
                                    "default": null
                                  },
                                  "city": {
                                    "nullable": true,
                                    "type": "string",
                                    "default": null
                                  },
                                  "state": {
                                    "nullable": true,
                                    "type": "string",
                                    "default": null
                                  },
                                  "zip_code": {
                                    "nullable": true,
                                    "type": "string",
                                    "default": null
                                  },
                                  "country": {
                                    "nullable": true,
                                    "type": "string",
                                    "default": null
                                  },
                                  "raw": {
                                    "nullable": true,
                                    "type": "string",
                                    "default": null
                                  }
                                },
                                "required": []
                              },
                              "type": { "nullable": true, "type": "string" },
                              "changed_at": {
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "remote_deleted_at": {
                                "nullable": true,
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "remote_data": {
                                "nullable": true,
                                "type": "object",
                                "additionalProperties": {
                                  "format": "any",
                                  "nullable": true
                                }
                              }
                            },
                            "required": [
                              "id",
                              "remote_id",
                              "name",
                              "address",
                              "type",
                              "changed_at",
                              "remote_deleted_at",
                              "remote_data"
                            ],
                            "example": {
                              "id": "22st2Ji8XpncEYEak8mvQgQF",
                              "remote_id": "1348",
                              "name": "Kombo HQ",
                              "address": {
                                "city": "Berlin",
                                "country": "Germany",
                                "raw": "Sonnenallee 63\n12045 Berlin, Berlin\nGermany",
                                "state": "Berlin",
                                "street_1": "Sonnenallee 63",
                                "street_2": null,
                                "zip_code": "12045"
                              },
                              "type": "OFFICE",
                              "changed_at": "2022-08-07T14:01:29.196Z",
                              "remote_deleted_at": "2022-08-07T14:01:29.196Z",
                              "remote_data": null
                            }
                          }
                        }
                      },
                      "required": ["next", "results"],
                      "example": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "22st2Ji8XpncEYEak8mvQgQF",
                            "remote_id": "1348",
                            "name": "Kombo HQ",
                            "address": {
                              "city": "Berlin",
                              "country": "Germany",
                              "raw": "Sonnenallee 63\n12045 Berlin, Berlin\nGermany",
                              "state": "Berlin",
                              "street_1": "Sonnenallee 63",
                              "street_2": null,
                              "zip_code": "12045"
                            },
                            "type": "OFFICE",
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": "2022-08-07T14:01:29.196Z",
                            "remote_data": null
                          }
                        ]
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "22st2Ji8XpncEYEak8mvQgQF",
                            "remote_id": "1348",
                            "name": "Kombo HQ",
                            "address": {
                              "city": "Berlin",
                              "country": "Germany",
                              "raw": "Sonnenallee 63\n12045 Berlin, Berlin\nGermany",
                              "state": "Berlin",
                              "street_1": "Sonnenallee 63",
                              "street_2": null,
                              "zip_code": "12045"
                            },
                            "type": "OFFICE",
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": "2022-08-07T14:01:29.196Z",
                            "remote_data": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /hris/locations Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Returned when no sync has finished successfully yet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"],
                      "example": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retrieve all locations.\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"next\": \"eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=\",\n    \"results\": [\n      {\n        \"id\": \"22st2Ji8XpncEYEak8mvQgQF\",\n        \"remote_id\": \"1348\",\n        \"name\": \"Kombo HQ\",\n        \"address\": {\n          \"city\": \"Berlin\",\n          \"country\": \"Germany\",\n          \"raw\": \"Sonnenallee 63\\n12045 Berlin, Berlin\\nGermany\",\n          \"state\": \"Berlin\",\n          \"street_1\": \"Sonnenallee 63\",\n          \"street_2\": null,\n          \"zip_code\": \"12045\"\n        },\n        \"type\": \"OFFICE\",\n        \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n        \"remote_deleted_at\": \"2022-08-07T14:01:29.196Z\"\n      }\n    ]\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.\n\n_If the first sync did not finish yet, a `503` status code will be returned to ensure you don't get incomplete data. This allows you to pull until the data is complete (we recommend you to depend on our webhooks though)._",
        "summary": "Get locations",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "bamboohr:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The cursor retrieved from the previous request when paginating",
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The number of results to return per page",
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "exclusiveMinimum": false,
              "maximum": 100,
              "exclusiveMaximum": false
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter the entries based on the modification date. If you want to track entry deletion, also set the `include_deleted=true` query parameter, because otherwise, deleted entries will be hidden.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "description": "By default, deleted entries are not returned. Use the `include_deleted` query param to include deleted entries too.",
              "type": "string",
              "enum": ["true", "false"],
              "default": "false"
            }
          }
        ],
        "tags": ["Unified HRIS API"]
      }
    },
    "/hris/absence-types": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /hris/absence-types Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "next": { "nullable": true, "type": "string" },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string" },
                              "name": { "nullable": true, "type": "string" },
                              "unit": {
                                "nullable": true,
                                "type": "string",
                                "enum": ["HOURS", "DAYS"]
                              },
                              "half_days_supported": {
                                "nullable": true,
                                "type": "boolean",
                                "description": "Whether the integration supports half-day absences (represented through `start_half_day` and `end_half_day`) for this absence type."
                              },
                              "remote_id": { "type": "string" },
                              "remote_data": {
                                "nullable": true,
                                "type": "object",
                                "additionalProperties": {
                                  "format": "any",
                                  "nullable": true
                                }
                              },
                              "changed_at": {
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "remote_deleted_at": {
                                "nullable": true,
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "unit",
                              "half_days_supported",
                              "remote_id",
                              "remote_data",
                              "changed_at",
                              "remote_deleted_at"
                            ],
                            "example": {
                              "id": "xzZoKssDaMZAd62kxayzzQvD",
                              "name": "Vacation",
                              "unit": "DAYS",
                              "half_days_supported": true,
                              "remote_id": "91",
                              "remote_data": null,
                              "changed_at": "2022-08-07T14:01:29.196Z",
                              "remote_deleted_at": null
                            }
                          }
                        }
                      },
                      "required": ["next", "results"],
                      "example": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "xzZoKssDaMZAd62kxayzzQvD",
                            "name": "Vacation",
                            "unit": "DAYS",
                            "half_days_supported": true,
                            "remote_id": "91",
                            "remote_data": null,
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null
                          }
                        ]
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "xzZoKssDaMZAd62kxayzzQvD",
                            "name": "Vacation",
                            "unit": "DAYS",
                            "half_days_supported": true,
                            "remote_id": "91",
                            "remote_data": null,
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /hris/absence-types Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Returned when no sync has finished successfully yet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"],
                      "example": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retrieve all absence types.\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"next\": \"eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=\",\n    \"results\": [\n      {\n        \"id\": \"xzZoKssDaMZAd62kxayzzQvD\",\n        \"name\": \"Vacation\",\n        \"unit\": \"DAYS\",\n        \"half_days_supported\": true,\n        \"remote_id\": \"91\",\n        \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n        \"remote_deleted_at\": null\n      }\n    ]\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.\n\n_If the first sync did not finish yet, a `503` status code will be returned to ensure you don't get incomplete data. This allows you to pull until the data is complete (we recommend you to depend on our webhooks though)._",
        "summary": "Get absence types",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "bamboohr:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The cursor retrieved from the previous request when paginating",
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The number of results to return per page",
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "exclusiveMinimum": false,
              "maximum": 100,
              "exclusiveMaximum": false
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter the entries based on the modification date. If you want to track entry deletion, also set the `include_deleted=true` query parameter, because otherwise, deleted entries will be hidden.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "description": "By default, deleted entries are not returned. Use the `include_deleted` query param to include deleted entries too.",
              "type": "string",
              "enum": ["true", "false"],
              "default": "false"
            }
          }
        ],
        "tags": ["Unified HRIS API"]
      }
    },
    "/hris/time-off-balances": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /hris/time-off-balances Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "next": { "nullable": true, "type": "string" },
                        "results": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": { "type": "string" },
                                  "remote_id": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "employee_id": { "type": "string" },
                                  "type_id": { "type": "string" },
                                  "balance": {
                                    "nullable": true,
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 5e-324,
                                    "exclusiveMinimum": false,
                                    "maximum": 1.7976931348623157e308,
                                    "exclusiveMaximum": false
                                  },
                                  "balance_unit": {
                                    "nullable": true,
                                    "type": "string",
                                    "enum": ["HOURS", "DAYS"]
                                  },
                                  "changed_at": {
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "remote_deleted_at": {
                                    "nullable": true,
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "used": {
                                    "nullable": true,
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 5e-324,
                                    "exclusiveMinimum": false,
                                    "maximum": 1.7976931348623157e308,
                                    "exclusiveMaximum": false
                                  },
                                  "used_unit": {
                                    "nullable": true,
                                    "type": "string",
                                    "enum": ["HOURS", "DAYS"]
                                  },
                                  "remote_data": {
                                    "nullable": true,
                                    "type": "object",
                                    "additionalProperties": {
                                      "format": "any",
                                      "nullable": true
                                    }
                                  }
                                },
                                "required": [
                                  "id",
                                  "remote_id",
                                  "employee_id",
                                  "type_id",
                                  "balance",
                                  "balance_unit",
                                  "changed_at",
                                  "remote_deleted_at",
                                  "used",
                                  "used_unit",
                                  "remote_data"
                                ],
                                "example": {
                                  "id": "FuyRuk5NqP3qTcThED3ymTuE",
                                  "remote_id": "124123",
                                  "employee_id": "2Up4ZCvq1bFVzmzXG6EWzV3j",
                                  "type_id": "BQJaBxRCiqN46G27VTegvkEr",
                                  "balance": 14,
                                  "balance_unit": "DAYS",
                                  "changed_at": "2022-08-07T14:01:29.196Z",
                                  "remote_deleted_at": null,
                                  "used": 3,
                                  "used_unit": "DAYS",
                                  "remote_data": null
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "object",
                                    "properties": {
                                      "id": { "type": "string" },
                                      "name": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "unit": {
                                        "nullable": true,
                                        "type": "string",
                                        "enum": ["HOURS", "DAYS"]
                                      },
                                      "half_days_supported": {
                                        "nullable": true,
                                        "type": "boolean",
                                        "description": "Whether the integration supports half-day absences (represented through `start_half_day` and `end_half_day`) for this absence type."
                                      },
                                      "remote_id": { "type": "string" },
                                      "remote_data": {
                                        "nullable": true,
                                        "type": "object",
                                        "additionalProperties": {
                                          "format": "any",
                                          "nullable": true
                                        }
                                      },
                                      "changed_at": {
                                        "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                        "type": "string",
                                        "format": "date-time",
                                        "externalDocs": {
                                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                        }
                                      },
                                      "remote_deleted_at": {
                                        "nullable": true,
                                        "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                        "type": "string",
                                        "format": "date-time",
                                        "externalDocs": {
                                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "unit",
                                      "half_days_supported",
                                      "remote_id",
                                      "remote_data",
                                      "changed_at",
                                      "remote_deleted_at"
                                    ],
                                    "example": {
                                      "id": "xzZoKssDaMZAd62kxayzzQvD",
                                      "name": "Vacation",
                                      "unit": "DAYS",
                                      "half_days_supported": true,
                                      "remote_id": "91",
                                      "remote_data": null,
                                      "changed_at": "2022-08-07T14:01:29.196Z",
                                      "remote_deleted_at": null
                                    }
                                  }
                                },
                                "required": ["type"]
                              }
                            ]
                          }
                        }
                      },
                      "required": ["next", "results"],
                      "example": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "FuyRuk5NqP3qTcThED3ymTuE",
                            "remote_id": "124123",
                            "employee_id": "2Up4ZCvq1bFVzmzXG6EWzV3j",
                            "type_id": "BQJaBxRCiqN46G27VTegvkEr",
                            "balance": 14,
                            "balance_unit": "DAYS",
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null,
                            "used": 3,
                            "used_unit": "DAYS",
                            "remote_data": null,
                            "type": {
                              "id": "xzZoKssDaMZAd62kxayzzQvD",
                              "name": "Vacation",
                              "unit": "DAYS",
                              "half_days_supported": true,
                              "remote_id": "91",
                              "remote_data": null,
                              "changed_at": "2022-08-07T14:01:29.196Z",
                              "remote_deleted_at": null
                            }
                          }
                        ]
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "FuyRuk5NqP3qTcThED3ymTuE",
                            "remote_id": "124123",
                            "employee_id": "2Up4ZCvq1bFVzmzXG6EWzV3j",
                            "type_id": "BQJaBxRCiqN46G27VTegvkEr",
                            "balance": 14,
                            "balance_unit": "DAYS",
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null,
                            "used": 3,
                            "used_unit": "DAYS",
                            "remote_data": null,
                            "type": {
                              "id": "xzZoKssDaMZAd62kxayzzQvD",
                              "name": "Vacation",
                              "unit": "DAYS",
                              "half_days_supported": true,
                              "remote_id": "91",
                              "remote_data": null,
                              "changed_at": "2022-08-07T14:01:29.196Z",
                              "remote_deleted_at": null
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /hris/time-off-balances Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Returned when no sync has finished successfully yet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"],
                      "example": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retrieve all time off balances.\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"next\": \"eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=\",\n    \"results\": [\n      {\n        \"id\": \"FuyRuk5NqP3qTcThED3ymTuE\",\n        \"remote_id\": \"124123\",\n        \"employee_id\": \"2Up4ZCvq1bFVzmzXG6EWzV3j\",\n        \"type_id\": \"BQJaBxRCiqN46G27VTegvkEr\",\n        \"balance\": 14,\n        \"balance_unit\": \"DAYS\",\n        \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n        \"remote_deleted_at\": null,\n        \"used\": 3,\n        \"used_unit\": \"DAYS\",\n        \"type\": {\n          \"id\": \"xzZoKssDaMZAd62kxayzzQvD\",\n          \"name\": \"Vacation\",\n          \"unit\": \"DAYS\",\n          \"half_days_supported\": true,\n          \"remote_id\": \"91\",\n          \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n          \"remote_deleted_at\": null\n        }\n      }\n    ]\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.\n\n_If the first sync did not finish yet, a `503` status code will be returned to ensure you don't get incomplete data. This allows you to pull until the data is complete (we recommend you to depend on our webhooks though)._",
        "summary": "Get time off balances",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "bamboohr:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The cursor retrieved from the previous request when paginating",
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The number of results to return per page",
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "exclusiveMinimum": false,
              "maximum": 100,
              "exclusiveMaximum": false
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter the entries based on the modification date. If you want to track entry deletion, also set the `include_deleted=true` query parameter, because otherwise, deleted entries will be hidden.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "description": "By default, deleted entries are not returned. Use the `include_deleted` query param to include deleted entries too.",
              "type": "string",
              "enum": ["true", "false"],
              "default": "false"
            }
          }
        ],
        "tags": ["Unified HRIS API"]
      }
    },
    "/hris/absences": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /hris/absences Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "next": { "nullable": true, "type": "string" },
                        "results": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": { "type": "string" },
                                  "remote_id": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "employee_id": { "type": "string" },
                                  "approver_id": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "start_date": {
                                    "nullable": true,
                                    "description": "The date this absence starts in the `yyyy-MM-dd` format.",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "end_date": {
                                    "nullable": true,
                                    "description": "The date this absence ends in the `yyyy-MM-dd` format.",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "start_half_day": {
                                    "nullable": true,
                                    "type": "boolean",
                                    "description": "`true` if the absence starts in the middle of the day, `false` if not, and `null` if the system doesn't support half-day absences."
                                  },
                                  "end_half_day": {
                                    "nullable": true,
                                    "type": "boolean",
                                    "description": "`true` if the absence ends in the middle of the day, `false` if not, and `null` if the system doesn't support half-day absences."
                                  },
                                  "start_time": {
                                    "nullable": true,
                                    "description": "**(⚠️ Deprecated)** A timestamp of when this absence starts. This is deprecated because very few HR systems actually keep track of specific times for absences. Please use a combination of `start_date` and `start_half_day` instead.",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "end_time": {
                                    "nullable": true,
                                    "description": "**(⚠️ Deprecated)** A timestamp of when this absence ends. This is deprecated because very few HR systems actually keep track of specific times for absences. Please use a combination of `start_date` and `start_half_day` instead.",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "amount": {
                                    "nullable": true,
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 5e-324,
                                    "exclusiveMinimum": false,
                                    "maximum": 1.7976931348623157e308,
                                    "exclusiveMaximum": false
                                  },
                                  "unit": {
                                    "nullable": true,
                                    "type": "string",
                                    "enum": ["HOURS", "DAYS"]
                                  },
                                  "status": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "employee_note": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "changed_at": {
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "remote_deleted_at": {
                                    "nullable": true,
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "type_id": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "remote_data": {
                                    "nullable": true,
                                    "type": "object",
                                    "additionalProperties": {
                                      "format": "any",
                                      "nullable": true
                                    }
                                  }
                                },
                                "required": [
                                  "id",
                                  "remote_id",
                                  "employee_id",
                                  "approver_id",
                                  "start_date",
                                  "end_date",
                                  "start_half_day",
                                  "end_half_day",
                                  "start_time",
                                  "end_time",
                                  "amount",
                                  "unit",
                                  "status",
                                  "employee_note",
                                  "changed_at",
                                  "remote_deleted_at",
                                  "type_id",
                                  "remote_data"
                                ],
                                "example": {
                                  "id": "22st2Ji8XpncEYEak8mvQgQF",
                                  "remote_id": "1348",
                                  "employee_id": "JDdUy9kiH5APaGizFrgNmQjM",
                                  "approver_id": "AgXEispYPP1BbToHpqnqcpxy",
                                  "start_date": "2022-08-04",
                                  "end_date": "2022-08-05",
                                  "start_half_day": true,
                                  "end_half_day": false,
                                  "start_time": "2022-08-04T00:00:00.000Z",
                                  "end_time": "2022-08-05T00:00:00.000Z",
                                  "amount": 2,
                                  "unit": "DAYS",
                                  "status": "APPROVED",
                                  "employee_note": "Visiting my family.",
                                  "changed_at": "2022-08-07T14:01:29.196Z",
                                  "remote_deleted_at": "2022-08-07T14:01:29.196Z",
                                  "type_id": "xzZoKssDaMZAd62kxayzzQvD",
                                  "remote_data": null
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "object",
                                    "properties": {
                                      "id": { "type": "string" },
                                      "name": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "unit": {
                                        "nullable": true,
                                        "type": "string",
                                        "enum": ["HOURS", "DAYS"]
                                      },
                                      "half_days_supported": {
                                        "nullable": true,
                                        "type": "boolean",
                                        "description": "Whether the integration supports half-day absences (represented through `start_half_day` and `end_half_day`) for this absence type."
                                      },
                                      "remote_id": { "type": "string" },
                                      "remote_data": {
                                        "nullable": true,
                                        "type": "object",
                                        "additionalProperties": {
                                          "format": "any",
                                          "nullable": true
                                        }
                                      },
                                      "changed_at": {
                                        "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                        "type": "string",
                                        "format": "date-time",
                                        "externalDocs": {
                                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                        }
                                      },
                                      "remote_deleted_at": {
                                        "nullable": true,
                                        "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                        "type": "string",
                                        "format": "date-time",
                                        "externalDocs": {
                                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "unit",
                                      "half_days_supported",
                                      "remote_id",
                                      "remote_data",
                                      "changed_at",
                                      "remote_deleted_at"
                                    ],
                                    "example": {
                                      "id": "xzZoKssDaMZAd62kxayzzQvD",
                                      "name": "Vacation",
                                      "unit": "DAYS",
                                      "half_days_supported": true,
                                      "remote_id": "91",
                                      "remote_data": null,
                                      "changed_at": "2022-08-07T14:01:29.196Z",
                                      "remote_deleted_at": null
                                    }
                                  }
                                },
                                "required": ["type"]
                              }
                            ]
                          }
                        }
                      },
                      "required": ["next", "results"],
                      "example": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "22st2Ji8XpncEYEak8mvQgQF",
                            "remote_id": "1348",
                            "employee_id": "JDdUy9kiH5APaGizFrgNmQjM",
                            "approver_id": "AgXEispYPP1BbToHpqnqcpxy",
                            "start_date": "2022-08-04",
                            "end_date": "2022-08-05",
                            "start_half_day": true,
                            "end_half_day": false,
                            "start_time": "2022-08-04T00:00:00.000Z",
                            "end_time": "2022-08-05T00:00:00.000Z",
                            "amount": 2,
                            "unit": "DAYS",
                            "status": "APPROVED",
                            "employee_note": "Visiting my family.",
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": "2022-08-07T14:01:29.196Z",
                            "type_id": "xzZoKssDaMZAd62kxayzzQvD",
                            "remote_data": null,
                            "type": {
                              "id": "xzZoKssDaMZAd62kxayzzQvD",
                              "name": "Vacation",
                              "unit": "DAYS",
                              "half_days_supported": true,
                              "remote_id": "91",
                              "remote_data": null,
                              "changed_at": "2022-08-07T14:01:29.196Z",
                              "remote_deleted_at": null
                            }
                          }
                        ]
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "22st2Ji8XpncEYEak8mvQgQF",
                            "remote_id": "1348",
                            "employee_id": "JDdUy9kiH5APaGizFrgNmQjM",
                            "approver_id": "AgXEispYPP1BbToHpqnqcpxy",
                            "start_date": "2022-08-04",
                            "end_date": "2022-08-05",
                            "start_half_day": true,
                            "end_half_day": false,
                            "start_time": "2022-08-04T00:00:00.000Z",
                            "end_time": "2022-08-05T00:00:00.000Z",
                            "amount": 2,
                            "unit": "DAYS",
                            "status": "APPROVED",
                            "employee_note": "Visiting my family.",
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": "2022-08-07T14:01:29.196Z",
                            "type_id": "xzZoKssDaMZAd62kxayzzQvD",
                            "remote_data": null,
                            "type": {
                              "id": "xzZoKssDaMZAd62kxayzzQvD",
                              "name": "Vacation",
                              "unit": "DAYS",
                              "half_days_supported": true,
                              "remote_id": "91",
                              "remote_data": null,
                              "changed_at": "2022-08-07T14:01:29.196Z",
                              "remote_deleted_at": null
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /hris/absences Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Returned when no sync has finished successfully yet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"],
                      "example": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retrieve all absences.\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"next\": \"eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=\",\n    \"results\": [\n      {\n        \"id\": \"22st2Ji8XpncEYEak8mvQgQF\",\n        \"remote_id\": \"1348\",\n        \"employee_id\": \"JDdUy9kiH5APaGizFrgNmQjM\",\n        \"approver_id\": \"AgXEispYPP1BbToHpqnqcpxy\",\n        \"start_date\": \"2022-08-04\",\n        \"end_date\": \"2022-08-05\",\n        \"start_half_day\": true,\n        \"end_half_day\": false,\n        \"start_time\": \"2022-08-04T00:00:00.000Z\",\n        \"end_time\": \"2022-08-05T00:00:00.000Z\",\n        \"amount\": 2,\n        \"unit\": \"DAYS\",\n        \"status\": \"APPROVED\",\n        \"employee_note\": \"Visiting my family.\",\n        \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n        \"remote_deleted_at\": \"2022-08-07T14:01:29.196Z\",\n        \"type_id\": \"xzZoKssDaMZAd62kxayzzQvD\",\n        \"type\": {\n          \"id\": \"xzZoKssDaMZAd62kxayzzQvD\",\n          \"name\": \"Vacation\",\n          \"unit\": \"DAYS\",\n          \"half_days_supported\": true,\n          \"remote_id\": \"91\",\n          \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n          \"remote_deleted_at\": null\n        }\n      }\n    ]\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.\n\n_If the first sync did not finish yet, a `503` status code will be returned to ensure you don't get incomplete data. This allows you to pull until the data is complete (we recommend you to depend on our webhooks though)._",
        "summary": "Get absences",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "bamboohr:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The cursor retrieved from the previous request when paginating",
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The number of results to return per page",
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "exclusiveMinimum": false,
              "maximum": 100,
              "exclusiveMaximum": false
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter the entries based on the modification date. If you want to track entry deletion, also set the `include_deleted=true` query parameter, because otherwise, deleted entries will be hidden.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "description": "By default, deleted entries are not returned. Use the `include_deleted` query param to include deleted entries too.",
              "type": "string",
              "enum": ["true", "false"],
              "default": "false"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter for all the absences that either start _or_ haven't ended yet on/after this day. If you imagine a calendar displaying absences, this defines the left-most visible day.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "date_until",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter for absences that start on or before this day (but might continue after). If you imagine a calendar displaying absences, this defines the right-most visible day.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "employee_id",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter by a specific employee using their ID.",
              "type": "string"
            }
          },
          {
            "name": "time_from",
            "in": "query",
            "required": false,
            "schema": {
              "description": "**(⚠️ Deprecated)** Filter for absences that either start after or start before and end after a certain time. Please use `date_from` instead.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "time_until",
            "in": "query",
            "required": false,
            "schema": {
              "description": "**(⚠️ Deprecated)** Filter for absences that start before a certain time. Please use `date_until` instead.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          }
        ],
        "tags": ["Unified HRIS API"]
      },
      "post": {
        "responses": {
          "200": {
            "description": "POST /hris/absences Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "remote_id": { "nullable": true, "type": "string" },
                        "employee_id": { "type": "string" },
                        "approver_id": { "nullable": true, "type": "string" },
                        "start_date": {
                          "nullable": true,
                          "description": "The date this absence starts in the `yyyy-MM-dd` format.",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "end_date": {
                          "nullable": true,
                          "description": "The date this absence ends in the `yyyy-MM-dd` format.",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "start_half_day": {
                          "nullable": true,
                          "type": "boolean",
                          "description": "`true` if the absence starts in the middle of the day, `false` if not, and `null` if the system doesn't support half-day absences."
                        },
                        "end_half_day": {
                          "nullable": true,
                          "type": "boolean",
                          "description": "`true` if the absence ends in the middle of the day, `false` if not, and `null` if the system doesn't support half-day absences."
                        },
                        "start_time": {
                          "nullable": true,
                          "description": "**(⚠️ Deprecated)** A timestamp of when this absence starts. This is deprecated because very few HR systems actually keep track of specific times for absences. Please use a combination of `start_date` and `start_half_day` instead.",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "end_time": {
                          "nullable": true,
                          "description": "**(⚠️ Deprecated)** A timestamp of when this absence ends. This is deprecated because very few HR systems actually keep track of specific times for absences. Please use a combination of `start_date` and `start_half_day` instead.",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "amount": {
                          "nullable": true,
                          "type": "number",
                          "format": "double",
                          "minimum": 5e-324,
                          "exclusiveMinimum": false,
                          "maximum": 1.7976931348623157e308,
                          "exclusiveMaximum": false
                        },
                        "unit": {
                          "nullable": true,
                          "type": "string",
                          "enum": ["HOURS", "DAYS"]
                        },
                        "status": { "nullable": true, "type": "string" },
                        "employee_note": { "nullable": true, "type": "string" },
                        "changed_at": {
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "remote_deleted_at": {
                          "nullable": true,
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "type_id": { "nullable": true, "type": "string" },
                        "remote_data": {
                          "nullable": true,
                          "type": "object",
                          "additionalProperties": {
                            "format": "any",
                            "nullable": true
                          }
                        }
                      },
                      "required": [
                        "id",
                        "remote_id",
                        "employee_id",
                        "approver_id",
                        "start_date",
                        "end_date",
                        "start_half_day",
                        "end_half_day",
                        "start_time",
                        "end_time",
                        "amount",
                        "unit",
                        "status",
                        "employee_note",
                        "changed_at",
                        "remote_deleted_at",
                        "type_id",
                        "remote_data"
                      ],
                      "example": {
                        "id": "22st2Ji8XpncEYEak8mvQgQF",
                        "remote_id": "1348",
                        "employee_id": "JDdUy9kiH5APaGizFrgNmQjM",
                        "approver_id": "AgXEispYPP1BbToHpqnqcpxy",
                        "start_date": "2022-08-04",
                        "end_date": "2022-08-05",
                        "start_half_day": true,
                        "end_half_day": false,
                        "start_time": "2022-08-04T00:00:00.000Z",
                        "end_time": "2022-08-05T00:00:00.000Z",
                        "amount": 2,
                        "unit": "DAYS",
                        "status": "APPROVED",
                        "employee_note": "Visiting my family.",
                        "changed_at": "2022-08-07T14:01:29.196Z",
                        "remote_deleted_at": "2022-08-07T14:01:29.196Z",
                        "type_id": "xzZoKssDaMZAd62kxayzzQvD",
                        "remote_data": null
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "id": "22st2Ji8XpncEYEak8mvQgQF",
                        "remote_id": "1348",
                        "employee_id": "JDdUy9kiH5APaGizFrgNmQjM",
                        "approver_id": "AgXEispYPP1BbToHpqnqcpxy",
                        "start_date": "2022-08-04",
                        "end_date": "2022-08-05",
                        "start_half_day": true,
                        "end_half_day": false,
                        "start_time": "2022-08-04T00:00:00.000Z",
                        "end_time": "2022-08-05T00:00:00.000Z",
                        "amount": 2,
                        "unit": "DAYS",
                        "status": "APPROVED",
                        "employee_note": "Visiting my family.",
                        "changed_at": "2022-08-07T14:01:29.196Z",
                        "remote_deleted_at": "2022-08-07T14:01:29.196Z",
                        "type_id": "xzZoKssDaMZAd62kxayzzQvD",
                        "remote_data": null
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "POST /hris/absences Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create a new absence.\n\nRequires the permission \"Manage absences\".\n\n\n```json\n{\n  \"employee_id\": \"wXJMxwDvPAjrJ4CyqdV9\",\n  \"absence_type_id\": \"3YKtQ7qedsrcCady1jSyAkY1\",\n  \"start_date\": \"2019-09-17\",\n  \"end_date\": \"2019-09-21\",\n  \"start_half_day\": false,\n  \"end_half_day\": false,\n  \"employee_note\": \"Visiting the aliens\"\n}\n```",
        "summary": "Create absence",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "POST /hris/absences request body",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "employee_id": {
                        "type": "string",
                        "description": "The ID of the employee in Kombo or their ID in the remote system by prefixing it with `remote:` (e.g., `remote:12312`)"
                      },
                      "absence_type_id": {
                        "type": "string",
                        "description": "The ID of the absence type in Kombo (not its `remote_id`)."
                      },
                      "start_date": {
                        "description": "When the absence starts. This is a plain date (i.e., `yyyy-MM-dd`), all time information is discarded.",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
                        "externalDocs": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                        }
                      },
                      "end_date": {
                        "description": "When the absence ends. This is a plain date (i.e., `yyyy-MM-dd`), all time information is discarded.",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
                        "externalDocs": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                        }
                      },
                      "start_half_day": {
                        "type": "boolean",
                        "description": "`true` if the absence should start in the middle of the day.",
                        "default": false
                      },
                      "end_half_day": {
                        "type": "boolean",
                        "description": "`true` if the absence should end in the middle of the day.",
                        "default": false
                      },
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "maximum": 1.7976931348623157e308,
                        "exclusiveMaximum": false,
                        "description": "Specifying this also requires specifying `unit`."
                      },
                      "unit": {
                        "type": "string",
                        "enum": ["HOURS", "DAYS"],
                        "description": "Specifying this also requires specifying `amount`."
                      },
                      "employee_note": {
                        "nullable": true,
                        "type": "string",
                        "description": "A note describing the reason for this absence."
                      },
                      "start_time": {
                        "description": "**(⚠️ Deprecated)** When the absence starts. This has been deprecated because most HR systems ignore time information. Please use `start_date` (and `start_half_day` if necessary).",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
                        "externalDocs": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                        }
                      },
                      "end_time": {
                        "description": "**(⚠️ Deprecated)** When the absence ends. This has been deprecated because most HR systems ignore time information. Please use `end_date` (and `end_half_day` if necessary).",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
                        "externalDocs": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                        }
                      }
                    },
                    "required": [
                      "employee_id",
                      "absence_type_id",
                      "employee_note"
                    ],
                    "example": {
                      "employee_id": "wXJMxwDvPAjrJ4CyqdV9",
                      "absence_type_id": "3YKtQ7qedsrcCady1jSyAkY1",
                      "start_date": "2019-09-17",
                      "end_date": "2019-09-21",
                      "start_half_day": false,
                      "end_half_day": false,
                      "employee_note": "Visiting the aliens"
                    }
                  }
                ]
              },
              "examples": {
                "example1": {
                  "value": {
                    "employee_id": "wXJMxwDvPAjrJ4CyqdV9",
                    "absence_type_id": "3YKtQ7qedsrcCady1jSyAkY1",
                    "start_date": "2019-09-17",
                    "end_date": "2019-09-21",
                    "start_half_day": false,
                    "end_half_day": false,
                    "employee_note": "Visiting the aliens"
                  }
                }
              }
            }
          }
        },
        "tags": ["Unified HRIS API"],
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "bamboohr:HWUTwvyx2wLoSUHphiWVrp28"
          }
        ]
      }
    },
    "/hris/absences/{absence_id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "DELETE /hris/absences/:absence_id Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "remote_id": { "nullable": true, "type": "string" },
                        "employee_id": { "type": "string" },
                        "approver_id": { "nullable": true, "type": "string" },
                        "start_date": {
                          "nullable": true,
                          "description": "The date this absence starts in the `yyyy-MM-dd` format.",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "end_date": {
                          "nullable": true,
                          "description": "The date this absence ends in the `yyyy-MM-dd` format.",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "start_half_day": {
                          "nullable": true,
                          "type": "boolean",
                          "description": "`true` if the absence starts in the middle of the day, `false` if not, and `null` if the system doesn't support half-day absences."
                        },
                        "end_half_day": {
                          "nullable": true,
                          "type": "boolean",
                          "description": "`true` if the absence ends in the middle of the day, `false` if not, and `null` if the system doesn't support half-day absences."
                        },
                        "start_time": {
                          "nullable": true,
                          "description": "**(⚠️ Deprecated)** A timestamp of when this absence starts. This is deprecated because very few HR systems actually keep track of specific times for absences. Please use a combination of `start_date` and `start_half_day` instead.",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "end_time": {
                          "nullable": true,
                          "description": "**(⚠️ Deprecated)** A timestamp of when this absence ends. This is deprecated because very few HR systems actually keep track of specific times for absences. Please use a combination of `start_date` and `start_half_day` instead.",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "amount": {
                          "nullable": true,
                          "type": "number",
                          "format": "double",
                          "minimum": 5e-324,
                          "exclusiveMinimum": false,
                          "maximum": 1.7976931348623157e308,
                          "exclusiveMaximum": false
                        },
                        "unit": {
                          "nullable": true,
                          "type": "string",
                          "enum": ["HOURS", "DAYS"]
                        },
                        "status": { "nullable": true, "type": "string" },
                        "employee_note": { "nullable": true, "type": "string" },
                        "changed_at": {
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "remote_deleted_at": {
                          "nullable": true,
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "type_id": { "nullable": true, "type": "string" },
                        "remote_data": {
                          "nullable": true,
                          "type": "object",
                          "additionalProperties": {
                            "format": "any",
                            "nullable": true
                          }
                        }
                      },
                      "required": [
                        "id",
                        "remote_id",
                        "employee_id",
                        "approver_id",
                        "start_date",
                        "end_date",
                        "start_half_day",
                        "end_half_day",
                        "start_time",
                        "end_time",
                        "amount",
                        "unit",
                        "status",
                        "employee_note",
                        "changed_at",
                        "remote_deleted_at",
                        "type_id",
                        "remote_data"
                      ],
                      "example": {
                        "id": "22st2Ji8XpncEYEak8mvQgQF",
                        "remote_id": "1348",
                        "employee_id": "JDdUy9kiH5APaGizFrgNmQjM",
                        "approver_id": "AgXEispYPP1BbToHpqnqcpxy",
                        "start_date": "2022-08-04",
                        "end_date": "2022-08-05",
                        "start_half_day": true,
                        "end_half_day": false,
                        "start_time": "2022-08-04T00:00:00.000Z",
                        "end_time": "2022-08-05T00:00:00.000Z",
                        "amount": 2,
                        "unit": "DAYS",
                        "status": "APPROVED",
                        "employee_note": "Visiting my family.",
                        "changed_at": "2022-08-07T14:01:29.196Z",
                        "remote_deleted_at": "2022-08-07T14:01:29.196Z",
                        "type_id": "xzZoKssDaMZAd62kxayzzQvD",
                        "remote_data": null
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "id": "22st2Ji8XpncEYEak8mvQgQF",
                        "remote_id": "1348",
                        "employee_id": "JDdUy9kiH5APaGizFrgNmQjM",
                        "approver_id": "AgXEispYPP1BbToHpqnqcpxy",
                        "start_date": "2022-08-04",
                        "end_date": "2022-08-05",
                        "start_half_day": true,
                        "end_half_day": false,
                        "start_time": "2022-08-04T00:00:00.000Z",
                        "end_time": "2022-08-05T00:00:00.000Z",
                        "amount": 2,
                        "unit": "DAYS",
                        "status": "APPROVED",
                        "employee_note": "Visiting my family.",
                        "changed_at": "2022-08-07T14:01:29.196Z",
                        "remote_deleted_at": "2022-08-07T14:01:29.196Z",
                        "type_id": "xzZoKssDaMZAd62kxayzzQvD",
                        "remote_data": null
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "DELETE /hris/absences/:absence_id Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Delete this absence.\n\nRequires the permission \"Manage absences\".\n\n\n```json\n{\n  \"absence_id\": \"wXJMxwDvPAjrJ4CyqdV9\"\n}\n```",
        "summary": "Delete absence",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "bamboohr:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "absence_id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The ID of the absence",
              "type": "string"
            },
            "examples": { "example1": { "value": "wXJMxwDvPAjrJ4CyqdV9" } }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "DELETE /hris/absences/:absence_id request body",
                "allOf": []
              },
              "examples": { "example1": { "value": {} } }
            }
          }
        },
        "tags": ["Unified HRIS API"]
      }
    },
    "/ats/applications": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /ats/applications Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "next": { "nullable": true, "type": "string" },
                        "results": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": { "type": "string" },
                                  "remote_id": { "type": "string" },
                                  "current_stage_id": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "job_id": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "candidate_id": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "changed_at": {
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "remote_deleted_at": {
                                    "nullable": true,
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "remote_data": {
                                    "nullable": true,
                                    "type": "object",
                                    "additionalProperties": {
                                      "format": "any",
                                      "nullable": true
                                    }
                                  }
                                },
                                "required": [
                                  "id",
                                  "remote_id",
                                  "current_stage_id",
                                  "job_id",
                                  "candidate_id",
                                  "changed_at",
                                  "remote_deleted_at",
                                  "remote_data"
                                ],
                                "example": {
                                  "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                  "remote_id": "32",
                                  "current_stage_id": "5J7L4b48wBfffYwek9Az9pkM",
                                  "job_id": "H5daSm8e85Dmvmne3wLeCPhX",
                                  "candidate_id": "H77fDF8uvEzGNPRubiz5DvQ7",
                                  "changed_at": "2022-08-07T14:01:29.196Z",
                                  "remote_deleted_at": null,
                                  "remote_data": null
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "candidate": {
                                    "nullable": true,
                                    "type": "object",
                                    "properties": {
                                      "id": { "type": "string" },
                                      "remote_id": { "type": "string" },
                                      "first_name": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "last_name": {
                                        "nullable": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "remote_id",
                                      "first_name",
                                      "last_name"
                                    ],
                                    "example": {
                                      "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                      "remote_id": "32",
                                      "first_name": "John",
                                      "last_name": "Doe"
                                    }
                                  },
                                  "current_stage": {
                                    "nullable": true,
                                    "type": "object",
                                    "properties": {
                                      "id": { "type": "string" },
                                      "remote_id": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "name": {
                                        "nullable": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": ["id", "remote_id", "name"],
                                    "example": {
                                      "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                      "remote_id": "32",
                                      "name": "Initial Screening"
                                    }
                                  },
                                  "job": {
                                    "nullable": true,
                                    "type": "object",
                                    "properties": {
                                      "id": { "type": "string" },
                                      "remote_id": { "type": "string" },
                                      "name": {
                                        "nullable": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": ["id", "remote_id", "name"],
                                    "example": {
                                      "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                      "remote_id": "32",
                                      "name": "Backend Engineer"
                                    }
                                  }
                                },
                                "required": [
                                  "candidate",
                                  "current_stage",
                                  "job"
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "required": ["next", "results"],
                      "example": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                            "remote_id": "32",
                            "current_stage_id": "5J7L4b48wBfffYwek9Az9pkM",
                            "job_id": "H5daSm8e85Dmvmne3wLeCPhX",
                            "candidate_id": "H77fDF8uvEzGNPRubiz5DvQ7",
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null,
                            "remote_data": null,
                            "candidate": {
                              "id": "26vafvWSRmbhNcxJYqjCzuJg",
                              "remote_id": "32",
                              "first_name": "John",
                              "last_name": "Doe"
                            },
                            "current_stage": {
                              "id": "26vafvWSRmbhNcxJYqjCzuJg",
                              "remote_id": "32",
                              "name": "Initial Screening"
                            },
                            "job": {
                              "id": "26vafvWSRmbhNcxJYqjCzuJg",
                              "remote_id": "32",
                              "name": "Backend Engineer"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                            "remote_id": "32",
                            "current_stage_id": "5J7L4b48wBfffYwek9Az9pkM",
                            "job_id": "H5daSm8e85Dmvmne3wLeCPhX",
                            "candidate_id": "H77fDF8uvEzGNPRubiz5DvQ7",
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null,
                            "remote_data": null,
                            "candidate": {
                              "id": "26vafvWSRmbhNcxJYqjCzuJg",
                              "remote_id": "32",
                              "first_name": "John",
                              "last_name": "Doe"
                            },
                            "current_stage": {
                              "id": "26vafvWSRmbhNcxJYqjCzuJg",
                              "remote_id": "32",
                              "name": "Initial Screening"
                            },
                            "job": {
                              "id": "26vafvWSRmbhNcxJYqjCzuJg",
                              "remote_id": "32",
                              "name": "Backend Engineer"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /ats/applications Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Returned when no sync has finished successfully yet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"],
                      "example": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retrieve all applications.\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"next\": \"eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=\",\n    \"results\": [\n      {\n        \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n        \"remote_id\": \"32\",\n        \"current_stage_id\": \"5J7L4b48wBfffYwek9Az9pkM\",\n        \"job_id\": \"H5daSm8e85Dmvmne3wLeCPhX\",\n        \"candidate_id\": \"H77fDF8uvEzGNPRubiz5DvQ7\",\n        \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n        \"remote_deleted_at\": null,\n        \"candidate\": {\n          \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n          \"remote_id\": \"32\",\n          \"first_name\": \"John\",\n          \"last_name\": \"Doe\"\n        },\n        \"current_stage\": {\n          \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n          \"remote_id\": \"32\",\n          \"name\": \"Initial Screening\"\n        },\n        \"job\": {\n          \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n          \"remote_id\": \"32\",\n          \"name\": \"Backend Engineer\"\n        }\n      }\n    ]\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.\n\n_If the first sync did not finish yet, a `503` status code will be returned to ensure you don't get incomplete data. This allows you to pull until the data is complete (we recommend you to depend on our webhooks though)._",
        "summary": "Get applications",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "join:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The cursor retrieved from the previous request when paginating",
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The number of results to return per page",
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "exclusiveMinimum": false,
              "maximum": 100,
              "exclusiveMaximum": false
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter the entries based on the modification date. If you want to track entry deletion, also set the `include_deleted=true` query parameter, because otherwise, deleted entries will be hidden.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "description": "By default, deleted entries are not returned. Use the `include_deleted` query param to include deleted entries too.",
              "type": "string",
              "enum": ["true", "false"],
              "default": "false"
            }
          }
        ],
        "tags": ["Unified ATS API"]
      }
    },
    "/ats/applications/{application_id}": {
      "patch": {
        "responses": {
          "200": {
            "description": "PATCH /ats/applications/:application_id Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": ["status", "data"]
                }
              }
            }
          },
          "400": {
            "description": "PATCH /ats/applications/:application_id Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "> **🦄 This endpoint is currently in closed beta!** We're testing it with selected customers before its public release. If you're interested in learning more or getting early access, please reach out.",
        "summary": "🦄 Update application",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "join:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "application_id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "PATCH /ats/applications/:application_id parameter",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "PATCH /ats/applications/:application_id request body",
                "allOf": []
              }
            }
          }
        },
        "tags": ["Unified ATS API"]
      }
    },
    "/ats/candidates": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /ats/candidates Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "next": { "nullable": true, "type": "string" },
                        "results": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": { "type": "string" },
                                  "remote_id": { "type": "string" },
                                  "first_name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "last_name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "company": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "title": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "confidential": {
                                    "nullable": true,
                                    "type": "boolean"
                                  },
                                  "source": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "phone_numbers": {
                                    "nullable": true,
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "phone_number": { "type": "string" }
                                      },
                                      "required": ["type", "phone_number"]
                                    },
                                    "default": []
                                  },
                                  "email_addresses": {
                                    "nullable": true,
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "email_address": { "type": "string" }
                                      },
                                      "required": ["type", "email_address"]
                                    },
                                    "default": []
                                  },
                                  "social_media": {
                                    "nullable": true,
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "link": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "username": {
                                          "nullable": true,
                                          "type": "string"
                                        }
                                      },
                                      "required": ["type", "link", "username"]
                                    },
                                    "default": []
                                  },
                                  "location": {
                                    "nullable": true,
                                    "type": "object",
                                    "properties": {
                                      "street_1": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "street_2": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "zip_code": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "city": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "state": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "country": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "raw": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      }
                                    },
                                    "required": []
                                  },
                                  "remote_created_at": {
                                    "nullable": true,
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "remote_updated_at": {
                                    "nullable": true,
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "remote_data": {
                                    "nullable": true,
                                    "type": "object",
                                    "additionalProperties": {
                                      "format": "any",
                                      "nullable": true
                                    }
                                  },
                                  "changed_at": {
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "remote_deleted_at": {
                                    "nullable": true,
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  }
                                },
                                "required": [
                                  "id",
                                  "remote_id",
                                  "first_name",
                                  "last_name",
                                  "company",
                                  "title",
                                  "confidential",
                                  "source",
                                  "location",
                                  "remote_created_at",
                                  "remote_updated_at",
                                  "remote_data",
                                  "changed_at",
                                  "remote_deleted_at"
                                ],
                                "example": {
                                  "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                  "remote_id": "32",
                                  "first_name": "John",
                                  "last_name": "Doe",
                                  "company": "Acme, Inc.",
                                  "title": "Head of Marketing",
                                  "confidential": false,
                                  "source": "Employee Referral",
                                  "phone_numbers": [
                                    {
                                      "phone_number": "+1-541-754-3010",
                                      "type": "HOME"
                                    }
                                  ],
                                  "email_addresses": [
                                    {
                                      "email_address": "john.doe@example.com",
                                      "type": "PRIVATE"
                                    }
                                  ],
                                  "social_media": [
                                    {
                                      "link": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
                                      "type": "YOUTUBE",
                                      "username": null
                                    }
                                  ],
                                  "location": {
                                    "city": "Berlin",
                                    "country": "de",
                                    "raw": "Berlin, Germany",
                                    "state": "Berlin",
                                    "street_1": "Lohmühlenstraße 65",
                                    "street_2": null,
                                    "zip_code": "12435"
                                  },
                                  "remote_created_at": "2022-04-02T00:00:00.000Z",
                                  "remote_updated_at": "2022-04-04T00:00:00.000Z",
                                  "remote_data": null,
                                  "changed_at": "2022-04-04T00:00:00.000Z",
                                  "remote_deleted_at": null
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "applications": {
                                    "type": "array",
                                    "items": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": { "type": "string" },
                                            "remote_id": { "type": "string" }
                                          },
                                          "required": ["id", "remote_id"],
                                          "example": {
                                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                            "remote_id": "32"
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "current_stage": {
                                              "nullable": true,
                                              "type": "object",
                                              "properties": {
                                                "id": { "type": "string" },
                                                "name": {
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "remote_id": {
                                                  "nullable": true,
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "name",
                                                "remote_id"
                                              ],
                                              "example": {
                                                "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                                "name": "Initial Screening",
                                                "remote_id": "32"
                                              }
                                            },
                                            "job": {
                                              "nullable": true,
                                              "type": "object",
                                              "properties": {
                                                "id": { "type": "string" },
                                                "name": {
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "remote_id": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "name",
                                                "remote_id"
                                              ],
                                              "example": {
                                                "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                                "name": "Backend Engineer",
                                                "remote_id": "32"
                                              }
                                            }
                                          },
                                          "required": ["current_stage", "job"]
                                        }
                                      ]
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": { "type": "string" },
                                        "name": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "remote_id": {
                                          "nullable": true,
                                          "type": "string"
                                        }
                                      },
                                      "required": ["id", "name", "remote_id"],
                                      "example": {
                                        "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                        "name": "High Potential",
                                        "remote_id": "32"
                                      }
                                    }
                                  }
                                },
                                "required": ["applications", "tags"]
                              }
                            ]
                          }
                        }
                      },
                      "required": ["next", "results"],
                      "example": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                            "remote_id": "32",
                            "first_name": "John",
                            "last_name": "Doe",
                            "company": "Acme, Inc.",
                            "title": "Head of Marketing",
                            "confidential": false,
                            "source": "Employee Referral",
                            "phone_numbers": [
                              {
                                "phone_number": "+1-541-754-3010",
                                "type": "HOME"
                              }
                            ],
                            "email_addresses": [
                              {
                                "email_address": "john.doe@example.com",
                                "type": "PRIVATE"
                              }
                            ],
                            "social_media": [
                              {
                                "link": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
                                "type": "YOUTUBE",
                                "username": null
                              }
                            ],
                            "location": {
                              "city": "Berlin",
                              "country": "de",
                              "raw": "Berlin, Germany",
                              "state": "Berlin",
                              "street_1": "Lohmühlenstraße 65",
                              "street_2": null,
                              "zip_code": "12435"
                            },
                            "remote_created_at": "2022-04-02T00:00:00.000Z",
                            "remote_updated_at": "2022-04-04T00:00:00.000Z",
                            "remote_data": null,
                            "changed_at": "2022-04-04T00:00:00.000Z",
                            "remote_deleted_at": null,
                            "applications": [
                              {
                                "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                "remote_id": "32",
                                "current_stage": {
                                  "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                  "name": "Initial Screening",
                                  "remote_id": "32"
                                },
                                "job": {
                                  "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                  "name": "Backend Engineer",
                                  "remote_id": "32"
                                }
                              }
                            ],
                            "tags": [
                              {
                                "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                "name": "High Potential",
                                "remote_id": "32"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                            "remote_id": "32",
                            "first_name": "John",
                            "last_name": "Doe",
                            "company": "Acme, Inc.",
                            "title": "Head of Marketing",
                            "confidential": false,
                            "source": "Employee Referral",
                            "phone_numbers": [
                              {
                                "phone_number": "+1-541-754-3010",
                                "type": "HOME"
                              }
                            ],
                            "email_addresses": [
                              {
                                "email_address": "john.doe@example.com",
                                "type": "PRIVATE"
                              }
                            ],
                            "social_media": [
                              {
                                "link": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
                                "type": "YOUTUBE",
                                "username": null
                              }
                            ],
                            "location": {
                              "city": "Berlin",
                              "country": "de",
                              "raw": "Berlin, Germany",
                              "state": "Berlin",
                              "street_1": "Lohmühlenstraße 65",
                              "street_2": null,
                              "zip_code": "12435"
                            },
                            "remote_created_at": "2022-04-02T00:00:00.000Z",
                            "remote_updated_at": "2022-04-04T00:00:00.000Z",
                            "remote_data": null,
                            "changed_at": "2022-04-04T00:00:00.000Z",
                            "remote_deleted_at": null,
                            "applications": [
                              {
                                "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                "remote_id": "32",
                                "current_stage": {
                                  "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                  "name": "Initial Screening",
                                  "remote_id": "32"
                                },
                                "job": {
                                  "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                  "name": "Backend Engineer",
                                  "remote_id": "32"
                                }
                              }
                            ],
                            "tags": [
                              {
                                "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                "name": "High Potential",
                                "remote_id": "32"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /ats/candidates Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Returned when no sync has finished successfully yet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"],
                      "example": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retrieve all candidates.\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"next\": \"eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=\",\n    \"results\": [\n      {\n        \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n        \"remote_id\": \"32\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Doe\",\n        \"company\": \"Acme, Inc.\",\n        \"title\": \"Head of Marketing\",\n        \"confidential\": false,\n        \"source\": \"Employee Referral\",\n        \"phone_numbers\": [\n          {\n            \"phone_number\": \"+1-541-754-3010\",\n            \"type\": \"HOME\"\n          }\n        ],\n        \"email_addresses\": [\n          {\n            \"email_address\": \"john.doe@example.com\",\n            \"type\": \"PRIVATE\"\n          }\n        ],\n        \"social_media\": [\n          {\n            \"link\": \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\",\n            \"type\": \"YOUTUBE\",\n            \"username\": null\n          }\n        ],\n        \"location\": {\n          \"city\": \"Berlin\",\n          \"country\": \"de\",\n          \"raw\": \"Berlin, Germany\",\n          \"state\": \"Berlin\",\n          \"street_1\": \"Lohmühlenstraße 65\",\n          \"street_2\": null,\n          \"zip_code\": \"12435\"\n        },\n        \"remote_created_at\": \"2022-04-02T00:00:00.000Z\",\n        \"remote_updated_at\": \"2022-04-04T00:00:00.000Z\",\n        \"changed_at\": \"2022-04-04T00:00:00.000Z\",\n        \"remote_deleted_at\": null,\n        \"applications\": [\n          {\n            \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n            \"remote_id\": \"32\",\n            \"current_stage\": {\n              \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n              \"name\": \"Initial Screening\",\n              \"remote_id\": \"32\"\n            },\n            \"job\": {\n              \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n              \"name\": \"Backend Engineer\",\n              \"remote_id\": \"32\"\n            }\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n            \"name\": \"High Potential\",\n            \"remote_id\": \"32\"\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.\n\n_If the first sync did not finish yet, a `503` status code will be returned to ensure you don't get incomplete data. This allows you to pull until the data is complete (we recommend you to depend on our webhooks though)._",
        "summary": "Get candidates",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "join:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The cursor retrieved from the previous request when paginating",
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The number of results to return per page",
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "exclusiveMinimum": false,
              "maximum": 100,
              "exclusiveMaximum": false
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter the entries based on the modification date. If you want to track entry deletion, also set the `include_deleted=true` query parameter, because otherwise, deleted entries will be hidden.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "description": "By default, deleted entries are not returned. Use the `include_deleted` query param to include deleted entries too.",
              "type": "string",
              "enum": ["true", "false"],
              "default": "false"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter by a comma-separated list of candidate IDs such as `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`.",
              "type": "string"
            }
          }
        ],
        "tags": ["Unified ATS API"]
      },
      "post": {
        "responses": {
          "200": {
            "description": "POST /ats/candidates Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "remote_id": { "type": "string" },
                        "first_name": { "nullable": true, "type": "string" },
                        "last_name": { "nullable": true, "type": "string" },
                        "company": { "nullable": true, "type": "string" },
                        "title": { "nullable": true, "type": "string" },
                        "confidential": { "nullable": true, "type": "boolean" },
                        "source": { "nullable": true, "type": "string" },
                        "phone_numbers": {
                          "nullable": true,
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": { "nullable": true, "type": "string" },
                              "phone_number": { "type": "string" }
                            },
                            "required": ["type", "phone_number"]
                          },
                          "default": []
                        },
                        "email_addresses": {
                          "nullable": true,
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": { "nullable": true, "type": "string" },
                              "email_address": { "type": "string" }
                            },
                            "required": ["type", "email_address"]
                          },
                          "default": []
                        },
                        "social_media": {
                          "nullable": true,
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": { "nullable": true, "type": "string" },
                              "link": { "nullable": true, "type": "string" },
                              "username": { "nullable": true, "type": "string" }
                            },
                            "required": ["type", "link", "username"]
                          },
                          "default": []
                        },
                        "location": {
                          "nullable": true,
                          "type": "object",
                          "properties": {
                            "street_1": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "street_2": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "zip_code": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "city": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "state": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "country": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            },
                            "raw": {
                              "nullable": true,
                              "type": "string",
                              "default": null
                            }
                          },
                          "required": []
                        },
                        "remote_created_at": {
                          "nullable": true,
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "remote_updated_at": {
                          "nullable": true,
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "remote_data": {
                          "nullable": true,
                          "type": "object",
                          "additionalProperties": {
                            "format": "any",
                            "nullable": true
                          }
                        },
                        "changed_at": {
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        },
                        "remote_deleted_at": {
                          "nullable": true,
                          "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                          "type": "string",
                          "format": "date-time",
                          "externalDocs": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                          }
                        }
                      },
                      "required": [
                        "id",
                        "remote_id",
                        "first_name",
                        "last_name",
                        "company",
                        "title",
                        "confidential",
                        "source",
                        "location",
                        "remote_created_at",
                        "remote_updated_at",
                        "remote_data",
                        "changed_at",
                        "remote_deleted_at"
                      ],
                      "example": {
                        "id": "26vafvWSRmbhNcxJYqjCzuJg",
                        "remote_id": "32",
                        "first_name": "John",
                        "last_name": "Doe",
                        "company": "Acme, Inc.",
                        "title": "Head of Marketing",
                        "confidential": false,
                        "source": "Employee Referral",
                        "phone_numbers": [
                          { "phone_number": "+1-541-754-3010", "type": "HOME" }
                        ],
                        "email_addresses": [
                          {
                            "email_address": "john.doe@example.com",
                            "type": "PRIVATE"
                          }
                        ],
                        "social_media": [
                          {
                            "link": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
                            "type": "YOUTUBE",
                            "username": null
                          }
                        ],
                        "location": {
                          "city": "Berlin",
                          "country": "de",
                          "raw": "Berlin, Germany",
                          "state": "Berlin",
                          "street_1": "Lohmühlenstraße 65",
                          "street_2": null,
                          "zip_code": "12435"
                        },
                        "remote_created_at": "2022-04-02T00:00:00.000Z",
                        "remote_updated_at": "2022-04-04T00:00:00.000Z",
                        "remote_data": null,
                        "changed_at": "2022-04-04T00:00:00.000Z",
                        "remote_deleted_at": null
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "id": "26vafvWSRmbhNcxJYqjCzuJg",
                        "remote_id": "32",
                        "first_name": "John",
                        "last_name": "Doe",
                        "company": "Acme, Inc.",
                        "title": "Head of Marketing",
                        "confidential": false,
                        "source": "Employee Referral",
                        "phone_numbers": [
                          { "phone_number": "+1-541-754-3010", "type": "HOME" }
                        ],
                        "email_addresses": [
                          {
                            "email_address": "john.doe@example.com",
                            "type": "PRIVATE"
                          }
                        ],
                        "social_media": [
                          {
                            "link": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
                            "type": "YOUTUBE",
                            "username": null
                          }
                        ],
                        "location": {
                          "city": "Berlin",
                          "country": "de",
                          "raw": "Berlin, Germany",
                          "state": "Berlin",
                          "street_1": "Lohmühlenstraße 65",
                          "street_2": null,
                          "zip_code": "12435"
                        },
                        "remote_created_at": "2022-04-02T00:00:00.000Z",
                        "remote_updated_at": "2022-04-04T00:00:00.000Z",
                        "remote_data": null,
                        "changed_at": "2022-04-04T00:00:00.000Z",
                        "remote_deleted_at": null
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "POST /ats/candidates Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create a new candidate and application for the specified job.\n\nRequires the permission \"Create and manage candidates and applications\".\n\n\n```json\n{\n  \"candidate\": {\n    \"first_name\": \"Frank\",\n    \"last_name\": \"Doe\",\n    \"company\": \"Acme Inc.\",\n    \"title\": \"Head of Integrations\",\n    \"email_address\": \"frank.doe@example.com\",\n    \"phone_number\": \"+1-541-754-3010\"\n  },\n  \"application\": {\n    \"job_id\": \"BDpgnpZ148nrGh4mYHNxJBgx\",\n    \"stage_id\": \"8x3YKRDcuRnwShdh96ShBNn1\"\n  },\n  \"attachments\": [\n    {\n      \"name\": \"Frank Doe CV.txt\",\n      \"data\": \"SGkgdGhlcmUsIEtvbWJvIGlzIGN1cnJlbnRseSBoaXJpbmcgZW5naW5lZXJzIHRoYXQgbG92ZSB0byB3b3JrIG9uIGRldmVsb3BlciBwcm9kdWN0cy4=\",\n      \"type\": \"CV\",\n      \"content_type\": \"text/plain\"\n    }\n  ]\n}\n```",
        "summary": "Create candidate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "POST /ats/candidates request body",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "candidate": {
                        "type": "object",
                        "properties": {
                          "first_name": { "type": "string" },
                          "last_name": { "type": "string" },
                          "email_address": {
                            "type": "string",
                            "format": "email",
                            "description": "The primary email address this application will be created with."
                          },
                          "company": {
                            "type": "string",
                            "description": "The company where the applicant is currently working."
                          },
                          "title": {
                            "type": "string",
                            "description": "The current job title of the applicant."
                          },
                          "phone_number": { "type": "string" },
                          "location": {
                            "type": "object",
                            "properties": {
                              "city": { "type": "string" },
                              "country": {
                                "type": "string",
                                "pattern": "/^[A-Z]{2}$/",
                                "description": "The uppercase two-letter ISO country (e.g., `DE`) of the applicant."
                              }
                            },
                            "required": ["country"]
                          }
                        },
                        "required": ["first_name", "last_name", "email_address"]
                      },
                      "application": {
                        "type": "object",
                        "properties": {
                          "job_id": {
                            "type": "string",
                            "description": "Kombo ID or Remote ID of the Job this candidate should apply for. If you want to use the ID of the integrated system (remote_id) you need to prefix the id with \"remote:\". You can use the remote ID if you do not want to sync jobs."
                          },
                          "stage_id": {
                            "type": "string",
                            "description": "Stage this candidate should be in. If left out, the default stage for this job will be used."
                          }
                        },
                        "required": ["job_id"],
                        "description": "Currently, every candidate has one application. If you are interested in talent pools, please contact Kombo."
                      },
                      "attachments": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "string",
                              "description": "Base64-encoded file. Please note that some systems have maximum file sizes."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the file you want to upload."
                            },
                            "content_type": {
                              "type": "string",
                              "pattern": "/^[\\w.-]+\\/[\\w.-]+$/",
                              "description": "Content/MIME type of the file (e.g., `application/pdf`)."
                            },
                            "type": {
                              "type": "string",
                              "enum": ["CV", "COVER_LETTER", "OTHER"]
                            }
                          },
                          "required": ["data", "name", "content_type", "type"]
                        },
                        "description": "Array of the attachments you would like upload. Some tools require for example at least a CV per application."
                      }
                    },
                    "required": ["candidate", "application", "attachments"],
                    "example": {
                      "candidate": {
                        "first_name": "Frank",
                        "last_name": "Doe",
                        "company": "Acme Inc.",
                        "title": "Head of Integrations",
                        "email_address": "frank.doe@example.com",
                        "phone_number": "+1-541-754-3010"
                      },
                      "application": {
                        "job_id": "BDpgnpZ148nrGh4mYHNxJBgx",
                        "stage_id": "8x3YKRDcuRnwShdh96ShBNn1"
                      },
                      "attachments": [
                        {
                          "name": "Frank Doe CV.txt",
                          "data": "SGkgdGhlcmUsIEtvbWJvIGlzIGN1cnJlbnRseSBoaXJpbmcgZW5naW5lZXJzIHRoYXQgbG92ZSB0byB3b3JrIG9uIGRldmVsb3BlciBwcm9kdWN0cy4=",
                          "type": "CV",
                          "content_type": "text/plain"
                        }
                      ]
                    }
                  }
                ]
              },
              "examples": {
                "example1": {
                  "value": {
                    "candidate": {
                      "first_name": "Frank",
                      "last_name": "Doe",
                      "company": "Acme Inc.",
                      "title": "Head of Integrations",
                      "email_address": "frank.doe@example.com",
                      "phone_number": "+1-541-754-3010"
                    },
                    "application": {
                      "job_id": "BDpgnpZ148nrGh4mYHNxJBgx",
                      "stage_id": "8x3YKRDcuRnwShdh96ShBNn1"
                    },
                    "attachments": [
                      {
                        "name": "Frank Doe CV.txt",
                        "data": "SGkgdGhlcmUsIEtvbWJvIGlzIGN1cnJlbnRseSBoaXJpbmcgZW5naW5lZXJzIHRoYXQgbG92ZSB0byB3b3JrIG9uIGRldmVsb3BlciBwcm9kdWN0cy4=",
                        "type": "CV",
                        "content_type": "text/plain"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": ["Unified ATS API"],
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "join:HWUTwvyx2wLoSUHphiWVrp28"
          }
        ]
      }
    },
    "/ats/candidates/{candidate_id}": {
      "patch": {
        "responses": {
          "200": {
            "description": "PATCH /ats/candidates/:candidate_id Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": ["status", "data"]
                }
              }
            }
          },
          "400": {
            "description": "PATCH /ats/candidates/:candidate_id Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "> **🦄 This endpoint is currently in closed beta!** We're testing it with selected customers before its public release. If you're interested in learning more or getting early access, please reach out.",
        "summary": "🦄 Update candidate",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "join:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "candidate_id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "PATCH /ats/candidates/:candidate_id parameter",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "PATCH /ats/candidates/:candidate_id request body",
                "allOf": []
              }
            }
          }
        },
        "tags": ["Unified ATS API"]
      }
    },
    "/ats/candidates/{candidate_id}/result-links": {
      "post": {
        "responses": {
          "200": {
            "description": "POST /ats/candidates/:candidate_id/result-links Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": ["status", "data"]
                }
              }
            }
          },
          "400": {
            "description": "POST /ats/candidates/:candidate_id/result-links Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Adds a result link to a candidate. This can, for example, be used to link a candidate back to a test result/assessment in your application. As not all ATS tools have a \"result link\" feature, we sometimes repurpose other fields to expose it.\n\nRequires the permission \"Create and manage candidates and applications\".\n\n\n```json\n{\n  \"label\": \"Assessment Result\",\n  \"url\": \"https://example.com/test-results/5BtP1WC1UboS7CF3yxjKcvjG\"\n}\n```",
        "summary": "Add result link to candidate",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "join:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "candidate_id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Kombo ID of the candidate you want to create the link for.",
              "type": "string"
            },
            "examples": { "example1": { "value": "8Xi6iZrwusZqJmDGXs49GBmJ" } }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "POST /ats/candidates/:candidate_id/result-links request body",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "If we can display a display name for the link, we will use this label."
                      },
                      "url": {
                        "type": "string",
                        "format": "url",
                        "description": "URL of the link."
                      }
                    },
                    "required": ["label", "url"],
                    "example": {
                      "label": "Assessment Result",
                      "url": "https://example.com/test-results/5BtP1WC1UboS7CF3yxjKcvjG"
                    }
                  }
                ]
              },
              "examples": {
                "example1": {
                  "value": {
                    "label": "Assessment Result",
                    "url": "https://example.com/test-results/5BtP1WC1UboS7CF3yxjKcvjG"
                  }
                }
              }
            }
          }
        },
        "tags": ["Unified ATS API"]
      }
    },
    "/ats/candidates/{candidate_id}/tags": {
      "post": {
        "responses": {
          "200": {
            "description": "POST /ats/candidates/:candidate_id/tags Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": ["status", "data"]
                }
              }
            }
          },
          "400": {
            "description": "POST /ats/candidates/:candidate_id/tags Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Add a tag to a candidate. Kombo takes care of creating the tag if required, finding out the right ID, and appending it to the list of tags.\n\nRequires the permission \"Create and manage candidates and applications\".\n\n\n```json\n{\n  \"tag\": {\n    \"name\": \"Excellent Fit\"\n  }\n}\n```",
        "summary": "Add tag to candidate",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "join:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "candidate_id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Kombo ID of the candidate you want to add the tag to.",
              "type": "string"
            },
            "examples": { "example1": { "value": "8Xi6iZrwusZqJmDGXs49GBmJ" } }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "POST /ats/candidates/:candidate_id/tags request body",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the tag you would like to add. Kombo will find out the right ID of the tag so you don't have to."
                          }
                        },
                        "required": ["name"]
                      }
                    },
                    "required": ["tag"],
                    "example": { "tag": { "name": "Excellent Fit" } }
                  }
                ]
              },
              "examples": {
                "example1": { "value": { "tag": { "name": "Excellent Fit" } } }
              }
            }
          }
        },
        "tags": ["Unified ATS API"]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "DELETE /ats/candidates/:candidate_id/tags Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": ["status", "data"]
                }
              }
            }
          },
          "400": {
            "description": "DELETE /ats/candidates/:candidate_id/tags Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Remove a tag from a candidate based on its name. This will also succeed if the tag does not exist on the candidate.\n\nRequires the permission \"Create and manage candidates and applications\".\n\n\n```json\n{\n  \"tag\": {\n    \"name\": \"Excellent Fit\"\n  }\n}\n```",
        "summary": "Remove tag from candidate",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "join:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "candidate_id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Kombo ID of the candidate you want to remove the tag from.",
              "type": "string"
            },
            "examples": { "example1": { "value": "8Xi6iZrwusZqJmDGXs49GBmJ" } }
          },
          {
            "name": "tag",
            "in": "query",
            "required": true,
            "schema": {
              "description": "DELETE /ats/candidates/:candidate_id/tags parameter",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the tag you would like to remove."
                }
              },
              "required": ["name"]
            },
            "examples": { "example1": { "value": { "name": "Excellent Fit" } } }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "DELETE /ats/candidates/:candidate_id/tags request body",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the tag you would like to remove."
                          }
                        },
                        "required": ["name"]
                      }
                    },
                    "required": ["tag"],
                    "example": { "tag": { "name": "Excellent Fit" } }
                  }
                ]
              },
              "examples": {
                "example1": { "value": { "tag": { "name": "Excellent Fit" } } }
              }
            }
          }
        },
        "tags": ["Unified ATS API"]
      }
    },
    "/ats/tags": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /ats/tags Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "next": { "nullable": true, "type": "string" },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string" },
                              "remote_id": {
                                "nullable": true,
                                "type": "string"
                              },
                              "name": { "nullable": true, "type": "string" },
                              "remote_data": {
                                "nullable": true,
                                "type": "object",
                                "additionalProperties": {
                                  "format": "any",
                                  "nullable": true
                                }
                              },
                              "changed_at": {
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "remote_deleted_at": {
                                "nullable": true,
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              }
                            },
                            "required": [
                              "id",
                              "remote_id",
                              "name",
                              "remote_data",
                              "changed_at",
                              "remote_deleted_at"
                            ],
                            "example": {
                              "id": "26vafvWSRmbhNcxJYqjCzuJg",
                              "remote_id": "32",
                              "name": "High Potential",
                              "remote_data": null,
                              "changed_at": "2022-08-07T14:01:29.196Z",
                              "remote_deleted_at": null
                            }
                          }
                        }
                      },
                      "required": ["next", "results"],
                      "example": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                            "remote_id": "32",
                            "name": "High Potential",
                            "remote_data": null,
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null
                          }
                        ]
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                            "remote_id": "32",
                            "name": "High Potential",
                            "remote_data": null,
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /ats/tags Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Returned when no sync has finished successfully yet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"],
                      "example": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retrieve all tags.\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"next\": \"eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=\",\n    \"results\": [\n      {\n        \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n        \"remote_id\": \"32\",\n        \"name\": \"High Potential\",\n        \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n        \"remote_deleted_at\": null\n      }\n    ]\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.\n\n_If the first sync did not finish yet, a `503` status code will be returned to ensure you don't get incomplete data. This allows you to pull until the data is complete (we recommend you to depend on our webhooks though)._",
        "summary": "Get tags",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "join:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The cursor retrieved from the previous request when paginating",
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The number of results to return per page",
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "exclusiveMinimum": false,
              "maximum": 100,
              "exclusiveMaximum": false
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter the entries based on the modification date. If you want to track entry deletion, also set the `include_deleted=true` query parameter, because otherwise, deleted entries will be hidden.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "description": "By default, deleted entries are not returned. Use the `include_deleted` query param to include deleted entries too.",
              "type": "string",
              "enum": ["true", "false"],
              "default": "false"
            }
          }
        ],
        "tags": ["Unified ATS API"]
      }
    },
    "/ats/application-stages": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /ats/application-stages Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "next": { "nullable": true, "type": "string" },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string" },
                              "remote_id": {
                                "nullable": true,
                                "type": "string"
                              },
                              "name": { "nullable": true, "type": "string" },
                              "remote_data": {
                                "nullable": true,
                                "type": "object",
                                "additionalProperties": {
                                  "format": "any",
                                  "nullable": true
                                }
                              },
                              "changed_at": {
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "remote_deleted_at": {
                                "nullable": true,
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              }
                            },
                            "required": [
                              "id",
                              "remote_id",
                              "name",
                              "remote_data",
                              "changed_at",
                              "remote_deleted_at"
                            ],
                            "example": {
                              "id": "26vafvWSRmbhNcxJYqjCzuJg",
                              "remote_id": "32",
                              "name": "Initial Screening",
                              "remote_data": null,
                              "changed_at": "2022-08-07T14:01:29.196Z",
                              "remote_deleted_at": null
                            }
                          }
                        }
                      },
                      "required": ["next", "results"],
                      "example": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                            "remote_id": "32",
                            "name": "Initial Screening",
                            "remote_data": null,
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null
                          }
                        ]
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                            "remote_id": "32",
                            "name": "Initial Screening",
                            "remote_data": null,
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /ats/application-stages Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Returned when no sync has finished successfully yet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"],
                      "example": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "**(⚠️ Deprecated)** Get all application stages available in the ATS. This is deprecated because most ATS systems have separate sets of stages for each job. We'd recommend using the `stages` property on jobs instead.\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"next\": \"eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=\",\n    \"results\": [\n      {\n        \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n        \"remote_id\": \"32\",\n        \"name\": \"Initial Screening\",\n        \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n        \"remote_deleted_at\": null\n      }\n    ]\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.\n\n_If the first sync did not finish yet, a `503` status code will be returned to ensure you don't get incomplete data. This allows you to pull until the data is complete (we recommend you to depend on our webhooks though)._",
        "summary": "Get application stages",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "join:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The cursor retrieved from the previous request when paginating",
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The number of results to return per page",
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "exclusiveMinimum": false,
              "maximum": 100,
              "exclusiveMaximum": false
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter the entries based on the modification date. If you want to track entry deletion, also set the `include_deleted=true` query parameter, because otherwise, deleted entries will be hidden.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "description": "By default, deleted entries are not returned. Use the `include_deleted` query param to include deleted entries too.",
              "type": "string",
              "enum": ["true", "false"],
              "default": "false"
            }
          }
        ],
        "tags": ["Unified ATS API"]
      }
    },
    "/ats/jobs": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /ats/jobs Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "next": { "nullable": true, "type": "string" },
                        "results": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": { "type": "string" },
                                  "remote_id": { "type": "string" },
                                  "name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "description": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "confidential": {
                                    "nullable": true,
                                    "type": "boolean",
                                    "description": "**(⚠️ Deprecated)** It makes more sense to store the visibility of a job in an enum. Therefore, we introduced the `visibility` enum on jobs."
                                  },
                                  "weekly_hours": {
                                    "nullable": true,
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 5e-324,
                                    "exclusiveMinimum": false,
                                    "maximum": 1.7976931348623157e308,
                                    "exclusiveMaximum": false
                                  },
                                  "employment_type": {
                                    "nullable": true,
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "FULL_TIME",
                                          "PART_TIME",
                                          "CONTRACT"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "description": "If we can't find a clear mapping: The original string passed through."
                                      }
                                    ],
                                    "description": "One of 3 standardized values (`FULL_TIME`, `PART_TIME`, or `CONTRACT`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                                  },
                                  "status": {
                                    "nullable": true,
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "OPEN",
                                          "CLOSED",
                                          "DRAFT",
                                          "ARCHIVED"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "description": "If we can't find a clear mapping: The original string passed through."
                                      }
                                    ],
                                    "description": "One of 4 standardized values (`OPEN`, `CLOSED`, `DRAFT`, or `ARCHIVED`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                                  },
                                  "visibility": {
                                    "nullable": true,
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "PUBLIC",
                                          "INTERNAL",
                                          "UNLISTED",
                                          "CONFIDENTIAL"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "description": "If we can't find a clear mapping: The original string passed through."
                                      }
                                    ],
                                    "description": "Describes the visibility of the job:\n\n- `PUBLIC`: visible to everyone, published on a job board\n- `INTERNAL`: only visible to employees of the company itself\n- `UNLISTED`: anyone can apply but only if they have the link to it\n- `CONFIDENTIAL`: nobody can apply and it's only visible in the ATS to people who were invited to it\n\nUseful if you are providing a job board and want to post public open jobs of your customers/partners."
                                  },
                                  "category": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "department": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "post_url": {
                                    "nullable": true,
                                    "type": "string",
                                    "description": "The public job posting URL of the ATS itself. This can be used by external job boards to redirect applicants."
                                  },
                                  "salary_amount": {
                                    "nullable": true,
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 5e-324,
                                    "exclusiveMinimum": false,
                                    "maximum": 1.7976931348623157e308,
                                    "exclusiveMaximum": false
                                  },
                                  "salary_amount_from": {
                                    "nullable": true,
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 5e-324,
                                    "exclusiveMinimum": false,
                                    "maximum": 1.7976931348623157e308,
                                    "exclusiveMaximum": false
                                  },
                                  "salary_amount_to": {
                                    "nullable": true,
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 5e-324,
                                    "exclusiveMinimum": false,
                                    "maximum": 1.7976931348623157e308,
                                    "exclusiveMaximum": false
                                  },
                                  "salary_currency": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "salary_period": {
                                    "nullable": true,
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "YEAR",
                                          "MONTH",
                                          "TWO_WEEKS",
                                          "WEEK",
                                          "DAY",
                                          "HOUR"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "description": "If we can't find a clear mapping: The original string passed through."
                                      }
                                    ],
                                    "description": "One of 6 standardized values (`YEAR`, `MONTH`, `TWO_WEEKS`, `WEEK`, `DAY`, or `HOUR`) **or** — in rare cases where can't find a clear mapping — the original string passed through."
                                  },
                                  "location": {
                                    "nullable": true,
                                    "type": "object",
                                    "properties": {
                                      "street_1": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "street_2": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "zip_code": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "city": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "state": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "country": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      },
                                      "raw": {
                                        "nullable": true,
                                        "type": "string",
                                        "default": null
                                      }
                                    },
                                    "required": []
                                  },
                                  "opened_at": {
                                    "nullable": true,
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "closed_at": {
                                    "nullable": true,
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "remote_created_at": {
                                    "nullable": true,
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "remote_updated_at": {
                                    "nullable": true,
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "contact_id": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "remote_data": {
                                    "nullable": true,
                                    "type": "object",
                                    "additionalProperties": {
                                      "format": "any",
                                      "nullable": true
                                    }
                                  },
                                  "changed_at": {
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  },
                                  "remote_deleted_at": {
                                    "nullable": true,
                                    "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                    "type": "string",
                                    "format": "date-time",
                                    "externalDocs": {
                                      "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                    }
                                  }
                                },
                                "required": [
                                  "id",
                                  "remote_id",
                                  "name",
                                  "description",
                                  "confidential",
                                  "weekly_hours",
                                  "employment_type",
                                  "status",
                                  "visibility",
                                  "category",
                                  "department",
                                  "post_url",
                                  "salary_amount",
                                  "salary_amount_from",
                                  "salary_amount_to",
                                  "salary_currency",
                                  "salary_period",
                                  "location",
                                  "opened_at",
                                  "closed_at",
                                  "remote_created_at",
                                  "remote_updated_at",
                                  "contact_id",
                                  "remote_data",
                                  "changed_at",
                                  "remote_deleted_at"
                                ],
                                "example": {
                                  "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                  "remote_id": "32",
                                  "name": "Backend Engineer",
                                  "description": "<p>Kombo is hiring engineers! If you are reading this and you are located in Berlin, Germany, feel free to contact us about this position.</p>",
                                  "confidential": false,
                                  "weekly_hours": 37,
                                  "employment_type": "FULL_TIME",
                                  "status": "OPEN",
                                  "visibility": "PUBLIC",
                                  "category": "Technical Job",
                                  "department": "Engineering",
                                  "post_url": "https://jobs.example.com/post/159829112",
                                  "salary_amount": 4200,
                                  "salary_amount_from": null,
                                  "salary_amount_to": null,
                                  "salary_currency": "EUR",
                                  "salary_period": "MONTH",
                                  "location": {
                                    "city": "Berlin",
                                    "country": "de",
                                    "raw": "Berlin, Germany",
                                    "state": "Berlin",
                                    "street_1": "Lohmühlenstraße 65",
                                    "street_2": null,
                                    "zip_code": "12435"
                                  },
                                  "opened_at": "2022-08-07T14:01:29.196Z",
                                  "closed_at": null,
                                  "remote_created_at": "2022-08-07T14:01:29.196Z",
                                  "remote_updated_at": "2022-08-07T14:01:29.196Z",
                                  "contact_id": "DGazmmpGwg8U75Rd9DNWzWMo",
                                  "remote_data": null,
                                  "changed_at": "2022-08-07T14:01:29.196Z",
                                  "remote_deleted_at": null
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "stages": {
                                    "type": "array",
                                    "items": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": { "type": "string" },
                                            "remote_id": {
                                              "nullable": true,
                                              "type": "string"
                                            },
                                            "name": {
                                              "nullable": true,
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "remote_id",
                                            "name"
                                          ],
                                          "example": {
                                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                            "remote_id": "32",
                                            "name": "Initial Screening"
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "index": {
                                              "nullable": true,
                                              "type": "integer",
                                              "format": "int64",
                                              "minimum": -9007199254740991,
                                              "exclusiveMinimum": false,
                                              "maximum": 9007199254740991,
                                              "exclusiveMaximum": false,
                                              "default": null
                                            }
                                          },
                                          "required": [],
                                          "example": { "index": 0 }
                                        }
                                      ]
                                    }
                                  }
                                },
                                "required": ["stages"]
                              }
                            ]
                          }
                        }
                      },
                      "required": ["next", "results"],
                      "example": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                            "remote_id": "32",
                            "name": "Backend Engineer",
                            "description": "<p>Kombo is hiring engineers! If you are reading this and you are located in Berlin, Germany, feel free to contact us about this position.</p>",
                            "confidential": false,
                            "weekly_hours": 37,
                            "employment_type": "FULL_TIME",
                            "status": "OPEN",
                            "visibility": "PUBLIC",
                            "category": "Technical Job",
                            "department": "Engineering",
                            "post_url": "https://jobs.example.com/post/159829112",
                            "salary_amount": 4200,
                            "salary_amount_from": null,
                            "salary_amount_to": null,
                            "salary_currency": "EUR",
                            "salary_period": "MONTH",
                            "location": {
                              "city": "Berlin",
                              "country": "de",
                              "raw": "Berlin, Germany",
                              "state": "Berlin",
                              "street_1": "Lohmühlenstraße 65",
                              "street_2": null,
                              "zip_code": "12435"
                            },
                            "opened_at": "2022-08-07T14:01:29.196Z",
                            "closed_at": null,
                            "remote_created_at": "2022-08-07T14:01:29.196Z",
                            "remote_updated_at": "2022-08-07T14:01:29.196Z",
                            "contact_id": "DGazmmpGwg8U75Rd9DNWzWMo",
                            "remote_data": null,
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null,
                            "stages": [
                              {
                                "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                "remote_id": "32",
                                "name": "Initial Screening",
                                "index": 0
                              }
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                            "remote_id": "32",
                            "name": "Backend Engineer",
                            "description": "<p>Kombo is hiring engineers! If you are reading this and you are located in Berlin, Germany, feel free to contact us about this position.</p>",
                            "confidential": false,
                            "weekly_hours": 37,
                            "employment_type": "FULL_TIME",
                            "status": "OPEN",
                            "visibility": "PUBLIC",
                            "category": "Technical Job",
                            "department": "Engineering",
                            "post_url": "https://jobs.example.com/post/159829112",
                            "salary_amount": 4200,
                            "salary_amount_from": null,
                            "salary_amount_to": null,
                            "salary_currency": "EUR",
                            "salary_period": "MONTH",
                            "location": {
                              "city": "Berlin",
                              "country": "de",
                              "raw": "Berlin, Germany",
                              "state": "Berlin",
                              "street_1": "Lohmühlenstraße 65",
                              "street_2": null,
                              "zip_code": "12435"
                            },
                            "opened_at": "2022-08-07T14:01:29.196Z",
                            "closed_at": null,
                            "remote_created_at": "2022-08-07T14:01:29.196Z",
                            "remote_updated_at": "2022-08-07T14:01:29.196Z",
                            "contact_id": "DGazmmpGwg8U75Rd9DNWzWMo",
                            "remote_data": null,
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null,
                            "stages": [
                              {
                                "id": "26vafvWSRmbhNcxJYqjCzuJg",
                                "remote_id": "32",
                                "name": "Initial Screening",
                                "index": 0
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /ats/jobs Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Returned when no sync has finished successfully yet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"],
                      "example": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retrieve all jobs.\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"next\": \"eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=\",\n    \"results\": [\n      {\n        \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n        \"remote_id\": \"32\",\n        \"name\": \"Backend Engineer\",\n        \"description\": \"<p>Kombo is hiring engineers! If you are reading this and you are located in Berlin, Germany, feel free to contact us about this position.</p>\",\n        \"confidential\": false,\n        \"weekly_hours\": 37,\n        \"employment_type\": \"FULL_TIME\",\n        \"status\": \"OPEN\",\n        \"visibility\": \"PUBLIC\",\n        \"category\": \"Technical Job\",\n        \"department\": \"Engineering\",\n        \"post_url\": \"https://jobs.example.com/post/159829112\",\n        \"salary_amount\": 4200,\n        \"salary_amount_from\": null,\n        \"salary_amount_to\": null,\n        \"salary_currency\": \"EUR\",\n        \"salary_period\": \"MONTH\",\n        \"location\": {\n          \"city\": \"Berlin\",\n          \"country\": \"de\",\n          \"raw\": \"Berlin, Germany\",\n          \"state\": \"Berlin\",\n          \"street_1\": \"Lohmühlenstraße 65\",\n          \"street_2\": null,\n          \"zip_code\": \"12435\"\n        },\n        \"opened_at\": \"2022-08-07T14:01:29.196Z\",\n        \"closed_at\": null,\n        \"remote_created_at\": \"2022-08-07T14:01:29.196Z\",\n        \"remote_updated_at\": \"2022-08-07T14:01:29.196Z\",\n        \"contact_id\": \"DGazmmpGwg8U75Rd9DNWzWMo\",\n        \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n        \"remote_deleted_at\": null,\n        \"stages\": [\n          {\n            \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n            \"remote_id\": \"32\",\n            \"name\": \"Initial Screening\",\n            \"index\": 0\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.\n\n_If the first sync did not finish yet, a `503` status code will be returned to ensure you don't get incomplete data. This allows you to pull until the data is complete (we recommend you to depend on our webhooks though)._",
        "summary": "Get jobs",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "join:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The cursor retrieved from the previous request when paginating",
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The number of results to return per page",
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "exclusiveMinimum": false,
              "maximum": 100,
              "exclusiveMaximum": false
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter the entries based on the modification date. If you want to track entry deletion, also set the `include_deleted=true` query parameter, because otherwise, deleted entries will be hidden.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "description": "By default, deleted entries are not returned. Use the `include_deleted` query param to include deleted entries too.",
              "type": "string",
              "enum": ["true", "false"],
              "default": "false"
            }
          },
          {
            "name": "post_url",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter by the `post_url` field. Can be used to find a job based on its public posting URL.",
              "type": "string"
            }
          }
        ],
        "tags": ["Unified ATS API"]
      }
    },
    "/ats/interviews": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /ats/interviews Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "next": { "nullable": true, "type": "string" },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string" },
                              "remote_id": { "type": "string" },
                              "start_at": {
                                "nullable": true,
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "end_at": {
                                "nullable": true,
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "application_id": {
                                "nullable": true,
                                "type": "string"
                              },
                              "application_stage_id": {
                                "nullable": true,
                                "type": "string"
                              },
                              "remote_data": {
                                "nullable": true,
                                "type": "object",
                                "additionalProperties": {
                                  "format": "any",
                                  "nullable": true
                                }
                              },
                              "changed_at": {
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "remote_deleted_at": {
                                "nullable": true,
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              }
                            },
                            "required": [
                              "id",
                              "remote_id",
                              "start_at",
                              "end_at",
                              "application_id",
                              "application_stage_id",
                              "remote_data",
                              "changed_at",
                              "remote_deleted_at"
                            ],
                            "example": {
                              "id": "26vafvWSRmbhNcxJYqjCzuJg",
                              "remote_id": "32",
                              "start_at": "2022-09-05T13:50:00.000Z",
                              "end_at": "2022-09-05T14:35:00.000Z",
                              "application_id": "H3UdbZR9ghwYJWW21bNQYgh5",
                              "application_stage_id": "DdWZGKupm9iLAhaG7ysXiTLD",
                              "remote_data": null,
                              "changed_at": "2022-08-07T14:01:29.196Z",
                              "remote_deleted_at": null
                            }
                          }
                        }
                      },
                      "required": ["next", "results"],
                      "example": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                            "remote_id": "32",
                            "start_at": "2022-09-05T13:50:00.000Z",
                            "end_at": "2022-09-05T14:35:00.000Z",
                            "application_id": "H3UdbZR9ghwYJWW21bNQYgh5",
                            "application_stage_id": "DdWZGKupm9iLAhaG7ysXiTLD",
                            "remote_data": null,
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null
                          }
                        ]
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                            "remote_id": "32",
                            "start_at": "2022-09-05T13:50:00.000Z",
                            "end_at": "2022-09-05T14:35:00.000Z",
                            "application_id": "H3UdbZR9ghwYJWW21bNQYgh5",
                            "application_stage_id": "DdWZGKupm9iLAhaG7ysXiTLD",
                            "remote_data": null,
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /ats/interviews Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Returned when no sync has finished successfully yet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"],
                      "example": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retrieve all interviews.\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"next\": \"eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=\",\n    \"results\": [\n      {\n        \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n        \"remote_id\": \"32\",\n        \"start_at\": \"2022-09-05T13:50:00.000Z\",\n        \"end_at\": \"2022-09-05T14:35:00.000Z\",\n        \"application_id\": \"H3UdbZR9ghwYJWW21bNQYgh5\",\n        \"application_stage_id\": \"DdWZGKupm9iLAhaG7ysXiTLD\",\n        \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n        \"remote_deleted_at\": null\n      }\n    ]\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.\n\n_If the first sync did not finish yet, a `503` status code will be returned to ensure you don't get incomplete data. This allows you to pull until the data is complete (we recommend you to depend on our webhooks though)._",
        "summary": "Get interviews",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "join:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The cursor retrieved from the previous request when paginating",
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The number of results to return per page",
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "exclusiveMinimum": false,
              "maximum": 100,
              "exclusiveMaximum": false
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter the entries based on the modification date. If you want to track entry deletion, also set the `include_deleted=true` query parameter, because otherwise, deleted entries will be hidden.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "description": "By default, deleted entries are not returned. Use the `include_deleted` query param to include deleted entries too.",
              "type": "string",
              "enum": ["true", "false"],
              "default": "false"
            }
          }
        ],
        "tags": ["Unified ATS API"]
      }
    },
    "/ats/users": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /ats/users Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "next": { "nullable": true, "type": "string" },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string" },
                              "remote_id": {
                                "nullable": true,
                                "type": "string"
                              },
                              "first_name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "last_name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "email": {
                                "nullable": true,
                                "type": "string",
                                "format": "email"
                              },
                              "remote_data": {
                                "nullable": true,
                                "type": "object",
                                "additionalProperties": {
                                  "format": "any",
                                  "nullable": true
                                }
                              },
                              "changed_at": {
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "remote_deleted_at": {
                                "nullable": true,
                                "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              }
                            },
                            "required": [
                              "id",
                              "remote_id",
                              "first_name",
                              "last_name",
                              "email",
                              "remote_data",
                              "changed_at",
                              "remote_deleted_at"
                            ],
                            "example": {
                              "id": "26vafvWSRmbhNcxJYqjCzuJg",
                              "remote_id": "32",
                              "first_name": "John",
                              "last_name": "Doe",
                              "email": "john.doe@kombo.dev",
                              "remote_data": null,
                              "changed_at": "2022-08-07T14:01:29.196Z",
                              "remote_deleted_at": null
                            }
                          }
                        }
                      },
                      "required": ["next", "results"],
                      "example": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                            "remote_id": "32",
                            "first_name": "John",
                            "last_name": "Doe",
                            "email": "john.doe@kombo.dev",
                            "remote_data": null,
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null
                          }
                        ]
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "next": "eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=",
                        "results": [
                          {
                            "id": "26vafvWSRmbhNcxJYqjCzuJg",
                            "remote_id": "32",
                            "first_name": "John",
                            "last_name": "Doe",
                            "email": "john.doe@kombo.dev",
                            "remote_data": null,
                            "changed_at": "2022-08-07T14:01:29.196Z",
                            "remote_deleted_at": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "GET /ats/users Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Returned when no sync has finished successfully yet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"],
                      "example": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": {
                        "message": "The first sync of this integration didn't finish yet! You can keep polling this until you get a successful response or react to our webhooks."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retrieve all users.\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"next\": \"eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=\",\n    \"results\": [\n      {\n        \"id\": \"26vafvWSRmbhNcxJYqjCzuJg\",\n        \"remote_id\": \"32\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Doe\",\n        \"email\": \"john.doe@kombo.dev\",\n        \"changed_at\": \"2022-08-07T14:01:29.196Z\",\n        \"remote_deleted_at\": null\n      }\n    ]\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.\n\n_If the first sync did not finish yet, a `503` status code will be returned to ensure you don't get incomplete data. This allows you to pull until the data is complete (we recommend you to depend on our webhooks though)._",
        "summary": "Get users",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "join:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The cursor retrieved from the previous request when paginating",
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The number of results to return per page",
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "exclusiveMinimum": false,
              "maximum": 100,
              "exclusiveMaximum": false
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Filter the entries based on the modification date. If you want to track entry deletion, also set the `include_deleted=true` query parameter, because otherwise, deleted entries will be hidden.",
              "type": "string",
              "format": "date-time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
              "externalDocs": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
              }
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "description": "By default, deleted entries are not returned. Use the `include_deleted` query param to include deleted entries too.",
              "type": "string",
              "enum": ["true", "false"],
              "default": "false"
            }
          }
        ],
        "tags": ["Unified ATS API"]
      }
    },
    "/connect/create-link": {
      "post": {
        "responses": {
          "200": {
            "description": "POST /connect/create-link Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "link": { "type": "string", "format": "url" }
                      },
                      "required": ["link"],
                      "example": {
                        "link": "https://connect.kombo.dev/v1?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.SWYgeW91IGFyZSByZWFkaW5nIHRoaXMsIHdlIHdvdWxkIGxpa2UgdG8gbGV0IHlvdSBrbm93IHRoYXQgd2UgYXJlIGhpcmluZyBwZW9wbGUgbGlrZSB5b3UgOikuIFJlYWNoIG91dCB0byBhbGV4QGtvbWJvLmRldiB0byBnZXQgaW4gY29udGFjdCBhbmQgdGVsbCBoaW0geW91IGNvbWUgZnJvbSB0aGUgSldUIDsp._hhX5YTtHfLn9ZC806dZceRn2whzxHyrhft1ONzNgOE"
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "link": "https://connect.kombo.dev/v1?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.SWYgeW91IGFyZSByZWFkaW5nIHRoaXMsIHdlIHdvdWxkIGxpa2UgdG8gbGV0IHlvdSBrbm93IHRoYXQgd2UgYXJlIGhpcmluZyBwZW9wbGUgbGlrZSB5b3UgOikuIFJlYWNoIG91dCB0byBhbGV4QGtvbWJvLmRldiB0byBnZXQgaW4gY29udGFjdCBhbmQgdGVsbCBoaW0geW91IGNvbWUgZnJvbSB0aGUgSldUIDsp._hhX5YTtHfLn9ZC806dZceRn2whzxHyrhft1ONzNgOE"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "POST /connect/create-link Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Generate a unique link that allows your user to enter the Kombo Connect flow.\n\n_Check out [our full guide](https://docs.kombo.dev/docs/embedded-flow) for more details about implementing the connection flow._\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"link\": \"https://connect.kombo.dev/v1?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.SWYgeW91IGFyZSByZWFkaW5nIHRoaXMsIHdlIHdvdWxkIGxpa2UgdG8gbGV0IHlvdSBrbm93IHRoYXQgd2UgYXJlIGhpcmluZyBwZW9wbGUgbGlrZSB5b3UgOikuIFJlYWNoIG91dCB0byBhbGV4QGtvbWJvLmRldiB0byBnZXQgaW4gY29udGFjdCBhbmQgdGVsbCBoaW0geW91IGNvbWUgZnJvbSB0aGUgSldUIDsp._hhX5YTtHfLn9ZC806dZceRn2whzxHyrhft1ONzNgOE\"\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.",
        "summary": "Create link",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "POST /connect/create-link request body",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "end_user_email": {
                        "type": "string",
                        "format": "email",
                        "description": "The email of the user this link is meant for."
                      },
                      "end_user_organization_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the user's organization."
                      },
                      "end_user_origin_id": {
                        "nullable": true,
                        "type": "string",
                        "minLength": 1,
                        "description": "The id the user/organization has in your own database.",
                        "default": null
                      },
                      "integration_category": {
                        "type": "string",
                        "enum": ["HRIS", "ATS"],
                        "default": "HRIS",
                        "description": "Category of the integration you want your customer to create."
                      },
                      "integration_tool": {
                        "nullable": true,
                        "type": "string",
                        "enum": [
                          "personio",
                          "bamboohr",
                          "hibob",
                          "workday",
                          "successfactors",
                          "factorial",
                          "join",
                          "heavenhr",
                          "kenjo",
                          "humaans",
                          "nmbrs",
                          "lever",
                          "greenhouse",
                          "ashby",
                          "sagehr",
                          "peoplehr",
                          "recruitee",
                          "lucca",
                          "workable",
                          "charliehr",
                          "officient",
                          "breezyhr",
                          "hrworks",
                          "teamtailor",
                          "datev",
                          "rippling",
                          "applicantstack",
                          "softgarden",
                          "payfit",
                          "smartrecruiters",
                          "pinpoint",
                          "jazzhr"
                        ],
                        "default": null,
                        "description": "Pre-define a tool this integration link can be used for."
                      },
                      "redirect_url": {
                        "nullable": true,
                        "type": "string",
                        "format": "url",
                        "description": "**(⚠️ Deprecated)** Where the user should be redirected to after the integration was created successfully. This is deprecated and should **not** be specified for [our new embedded flow](https://docs.kombo.dev/docs/embedded-flow).",
                        "default": null
                      }
                    },
                    "required": ["end_user_email", "end_user_organization_name"]
                  }
                ]
              }
            }
          }
        },
        "tags": ["Kombo Connect"]
      }
    },
    "/connect/activate-integration": {
      "post": {
        "responses": {
          "200": {
            "description": "POST /connect/activate-integration Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "tool": { "type": "string" },
                        "id": { "type": "string" },
                        "end_user_origin_id": {
                          "nullable": true,
                          "type": "string"
                        },
                        "end_user_organization_name": { "type": "string" },
                        "end_user_email": {
                          "nullable": true,
                          "type": "string",
                          "format": "email"
                        }
                      },
                      "required": [
                        "tool",
                        "id",
                        "end_user_origin_id",
                        "end_user_organization_name",
                        "end_user_email"
                      ],
                      "example": {
                        "tool": "personio",
                        "id": "personio:CBNMt7dSNCzBdnRTx87dev4E",
                        "end_user_origin_id": "36123",
                        "end_user_organization_name": "Acme, Inc.",
                        "end_user_email": "user@example.com"
                      }
                    }
                  },
                  "required": ["status", "data"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "success",
                      "data": {
                        "tool": "personio",
                        "id": "personio:CBNMt7dSNCzBdnRTx87dev4E",
                        "end_user_origin_id": "36123",
                        "end_user_organization_name": "Acme, Inc.",
                        "end_user_email": "user@example.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "POST /connect/activate-integration Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Activate an integration that was just created via Kombo Connect.\n\n_Check out [our full guide](https://docs.kombo.dev/docs/embedded-flow) for more details about implementing the connection flow._\n\n```json\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"tool\": \"personio\",\n    \"id\": \"personio:CBNMt7dSNCzBdnRTx87dev4E\",\n    \"end_user_origin_id\": \"36123\",\n    \"end_user_organization_name\": \"Acme, Inc.\",\n    \"end_user_email\": \"user@example.com\"\n  }\n}\n```\n\n> ​💡 Scroll down and click on \"200\" to view the detailed response schema.",
        "summary": "Activate integration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "POST /connect/activate-integration request body",
                "allOf": [
                  {
                    "type": "object",
                    "properties": { "token": { "type": "string" } },
                    "required": ["token"]
                  }
                ]
              }
            }
          }
        },
        "tags": ["Kombo Connect"]
      }
    },
    "/custom/datev/employees/{employee_id}/prepare-payroll": {
      "put": {
        "responses": {
          "200": {
            "description": "PUT /custom/datev/employees/:employee_id/prepare-payroll Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": ["status", "data"]
                }
              }
            }
          },
          "400": {
            "description": "PUT /custom/datev/employees/:employee_id/prepare-payroll Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "What DATEV requires to prepare payroll is very specific and currently, as DATEV is not providing \"read\", this is not part of the unified model.\n\nRequires the permission \"Manage payroll\".\n\n\n```json\n{\n  \"employee_id\": \"EvLV61zdahkN4ftPJbmPCkdv\",\n  \"payroll_run\": {\n    \"date\": \"2022-05-01\"\n  },\n  \"hourly_payments\": [\n    {\n      \"hours\": 14,\n      \"lohnart\": 200\n    },\n    {\n      \"hours\": 16,\n      \"lohnart\": 232\n    }\n  ],\n  \"fixed_payments\": [\n    {\n      \"amount\": 560,\n      \"lohnart\": 100\n    }\n  ]\n}\n```",
        "summary": "Prepare DATEV Payroll",
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "datev:HWUTwvyx2wLoSUHphiWVrp28"
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "ID of the employee that should be updated. You can use their Kombo `id` or their ID in the remote system by prefixing it with `remote:` (e.g., `remote:12312`)",
              "type": "string"
            },
            "examples": { "example1": { "value": "EvLV61zdahkN4ftPJbmPCkdv" } }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "PUT /custom/datev/employees/:employee_id/prepare-payroll request body",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "payroll_run": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "description": "YYYY-MM-DDTHH:mm:ss.sssZ",
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
                            "externalDocs": {
                              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                            }
                          }
                        },
                        "required": ["date"]
                      },
                      "hourly_payments": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "hours": {
                              "type": "number",
                              "format": "double",
                              "minimum": 5e-324,
                              "exclusiveMinimum": false,
                              "maximum": 1.7976931348623157e308,
                              "exclusiveMaximum": false,
                              "description": "Number of hours this employee has worked."
                            },
                            "lohnart": {
                              "type": "number",
                              "format": "double",
                              "minimum": 5e-324,
                              "exclusiveMinimum": false,
                              "maximum": 1.7976931348623157e308,
                              "exclusiveMaximum": false,
                              "description": "The \"Lohnart\" (payment-type) in DATEV. Make sure a Lohnart is selected that actually supports hours."
                            }
                          },
                          "required": ["hours", "lohnart"]
                        },
                        "description": "Add entries for all the hourly calculated supplements here. For example you can write \"Overtime\" or \"Work on Holidays\" (in hours here). Unfortunately, DATEV doens't allow showing a lable for the entries."
                      },
                      "fixed_payments": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "format": "double",
                              "minimum": 5e-324,
                              "exclusiveMinimum": false,
                              "maximum": 1.7976931348623157e308,
                              "exclusiveMaximum": false
                            },
                            "lohnart": {
                              "type": "number",
                              "format": "double",
                              "minimum": 5e-324,
                              "exclusiveMinimum": false,
                              "maximum": 1.7976931348623157e308,
                              "exclusiveMaximum": false,
                              "description": "The \"Lohnart\" (payment-type) in DATEV. Make sure a Lohnart is selected that actually supports fixed payments (no hourly modifier)."
                            }
                          },
                          "required": ["amount", "lohnart"]
                        },
                        "description": "Add entries for all the fixed supplements here. For example you can write \"Bonuses\" (in Euros here). Unfortunately, DATEV doens't allow showing a lable for the entries."
                      }
                    },
                    "required": [
                      "payroll_run",
                      "hourly_payments",
                      "fixed_payments"
                    ],
                    "example": {
                      "payroll_run": { "date": "2022-05-01" },
                      "fixed_payments": [{ "amount": 560, "lohnart": 100 }],
                      "hourly_payments": [
                        { "hours": 14, "lohnart": 200 },
                        { "hours": 16, "lohnart": 232 }
                      ]
                    }
                  }
                ]
              },
              "examples": {
                "example1": {
                  "value": {
                    "payroll_run": { "date": "2022-05-01" },
                    "fixed_payments": [{ "amount": 560, "lohnart": 100 }],
                    "hourly_payments": [
                      { "hours": 14, "lohnart": 200 },
                      { "hours": 16, "lohnart": 232 }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": ["Custom Endpoints"]
      }
    },
    "/custom/datev/data-pushes": {
      "get": {
        "responses": {
          "200": {
            "description": "GET /custom/datev/data-pushes Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data_pushes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string" },
                              "type": {
                                "type": "string",
                                "enum": ["GENERAL", "PAYROLL"],
                                "description": "Type of the executed data push."
                              },
                              "created_at": {
                                "description": "Date when the push-data endpoint was called.",
                                "type": "string",
                                "format": "date-time",
                                "externalDocs": {
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                                }
                              },
                              "upload_jobs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": { "type": "string" },
                                    "file_name": { "type": "string" },
                                    "state": {
                                      "type": "string",
                                      "enum": [
                                        "FAILED",
                                        "UPLOADED",
                                        "IMPORTED",
                                        "CORRUPTED",
                                        "DELETED",
                                        "AUTO_DELETED"
                                      ],
                                      "description": "If we were not able to send the file to DATEV, we will set the state \"FAILED\". The other values are synced from DATEV for the respective import jobs."
                                    },
                                    "file": {
                                      "type": "string",
                                      "description": "Actual content of the file."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "file_name",
                                    "state",
                                    "file"
                                  ]
                                },
                                "description": "List of all the submitted files. This can include multiple files if data was edited for multiple months."
                              }
                            },
                            "required": [
                              "id",
                              "type",
                              "created_at",
                              "upload_jobs"
                            ]
                          }
                        }
                      },
                      "required": ["data_pushes"]
                    }
                  },
                  "required": ["status", "data"]
                }
              }
            }
          },
          "400": {
            "description": "GET /custom/datev/data-pushes Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Returns all \"DATEV Data Pushes\" of the last 2 months. You can use this endpoint to give your users transparency about submitted \"ASCII-Files\" and their status. Each data push can contain multiple files that were submitted.",
        "tags": ["Custom Endpoints"],
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "datev:HWUTwvyx2wLoSUHphiWVrp28"
          }
        ]
      }
    },
    "/custom/datev/push-data/general": {
      "post": {
        "responses": {
          "200": {
            "description": "POST /custom/datev/push-data/general Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "files": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": { "type": "string" },
                              "content": { "type": "string" }
                            },
                            "required": ["name", "content"]
                          }
                        }
                      },
                      "required": ["files"]
                    }
                  },
                  "required": ["status", "data"]
                }
              }
            }
          },
          "400": {
            "description": "POST /custom/datev/push-data/general Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Uploads the currently relevant general data (employees, compensations, and time offs) to DATEV. This will create so called ASCII files that the accountant has to import in DATEV. You can call this endpoint to implement an on-demand sync to DATEV, for example if you want to offer your users a button to do that in your application.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "POST /custom/datev/push-data/general request body",
                "allOf": []
              }
            }
          }
        },
        "tags": ["Custom Endpoints"],
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "datev:HWUTwvyx2wLoSUHphiWVrp28"
          }
        ]
      }
    },
    "/custom/datev/push-data/payroll": {
      "post": {
        "responses": {
          "200": {
            "description": "POST /custom/datev/push-data/payroll Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["success"] },
                    "data": {
                      "type": "object",
                      "properties": {
                        "files": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": { "type": "string" },
                              "content": { "type": "string" }
                            },
                            "required": ["name", "content"]
                          }
                        }
                      },
                      "required": ["files"]
                    }
                  },
                  "required": ["status", "data"]
                }
              }
            }
          },
          "400": {
            "description": "POST /custom/datev/push-data/payroll Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "enum": ["error"] },
                    "error": {
                      "type": "object",
                      "properties": { "message": { "type": "string" } },
                      "required": ["message"]
                    }
                  },
                  "required": ["status", "error"]
                },
                "examples": {
                  "example1": {
                    "value": {
                      "status": "error",
                      "error": { "message": "Sample error message" }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Uploads the currently relevant payroll data (supplements) to DATEV. This will create so called ASCII files that the accountant has to import in DATEV. After finishing the payroll preparation or after correcting payroll, you can call this.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "POST /custom/datev/push-data/payroll request body",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "payroll_month": {
                        "description": "Specify the month for which the payroll data should be sunmitted. The date must be specified as the first day of a month (e.g. 2022-12-01).",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?)?Z?$",
                        "externalDocs": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"
                        }
                      }
                    },
                    "required": ["payroll_month"]
                  }
                ]
              }
            }
          }
        },
        "tags": ["Custom Endpoints"],
        "parameters": [
          {
            "in": "header",
            "name": "X-Integration-Id",
            "schema": { "type": "string" },
            "description": "ID of the integration you want to interact with.",
            "example": "datev:HWUTwvyx2wLoSUHphiWVrp28"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {},
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "ApiKey": {
        "type": "http",
        "scheme": "bearer",
        "description": "You can find your API key on the Kombo dashboard."
      }
    },
    "links": {},
    "callbacks": {}
  },
  "tags": [
    { "name": "General" },
    {
      "name": "Kombo Connect",
      "description": "Endpoints for Kombo Connect, our end-user-facing flow for setting up new integrations."
    },
    {
      "name": "Unified HRIS API",
      "description": "Unified endpoints to access all the HR concepts you might need."
    }
  ],
  "servers": [{ "url": "https://api.kombo.dev/v1" }],
  "security": [{ "ApiKey": [] }]
}
